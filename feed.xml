<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android UI OpenSource</title>
    <description>Collection of OpenSource for Android UI.</description>
    <link>http://kmshack.github.io/AndroidUICollection/</link>
    <atom:link href="http://kmshack.github.io/AndroidUICollection/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 03 Apr 2017 13:56:25 +0900</pubDate>
    <lastBuildDate>Mon, 03 Apr 2017 13:56:25 +0900</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>SlidingRootNav</title>
        <description>&lt;h1 id=&quot;slidingrootnav&quot;&gt;SlidingRootNav&lt;/h1&gt;

&lt;p&gt;The library is a DrawerLayout-like ViewGroup, where a “drawer” is hidden under the content view, which can be shifted to make the drawer visible. It doesn’t provide you with a drawer builder.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;art/sample.gif&quot;&gt;GifSample&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;gradle&quot;&gt;Gradle&lt;/h2&gt;
&lt;p&gt;Add this into your dependencies block.
&lt;code class=&quot;highlighter-rouge&quot;&gt;
compile &#39;com.yarolegovich:sliding-root-nav:1.0.2&#39;
&lt;/code&gt;
## Sample
Please see the &lt;a href=&quot;sample/src/main/java/com/yarolegovich/slidingrootnav/sample&quot;&gt;sample app&lt;/a&gt; for a library usage example.&lt;/p&gt;

&lt;h2 id=&quot;wiki&quot;&gt;Wiki&lt;/h2&gt;
&lt;p&gt;#### Usage:
 1. Create your content_view.xml (&lt;a href=&quot;sample/src/main/res/layout/activity_main.xml&quot;&gt;example&lt;/a&gt;) or construct a &lt;code class=&quot;highlighter-rouge&quot;&gt;View&lt;/code&gt; programatically.
 2. Set the content view (for example, using &lt;code class=&quot;highlighter-rouge&quot;&gt;setContentView&lt;/code&gt; in your activity).
 3. Create your menu.xml (&lt;a href=&quot;sample/src/main/res/layout/menu_left_drawer.xml&quot;&gt;example&lt;/a&gt;) or construct a &lt;code class=&quot;highlighter-rouge&quot;&gt;View&lt;/code&gt; programatically.
 4. Now you need to inject the menu in your &lt;code class=&quot;highlighter-rouge&quot;&gt;onCreate&lt;/code&gt;. You can specify transformations of a content view or use the default ones. 
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
new SlidingRootNavBuilder(this)
  .withMenuLayout(R.layout.menu_left_drawer)
  .inject();
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;api&quot;&gt;API&lt;/h3&gt;
&lt;p&gt;#### Transformations
You can specify root transformations using &lt;code class=&quot;highlighter-rouge&quot;&gt;SlidingRootNavBuilder&lt;/code&gt;.
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
new SlidingRootNavBuilder(this)
  .withDragDistance(140) //Horizontal translation of a view. Default == 180dp
  .withRootViewScale(0.7f) //Content view&#39;s scale will be interpolated between 1f and 0.7f. Default == 0.65f;
  .withRootViewElevation(10) //Content view&#39;s elevation will be interpolated between 0 and 10dp. Default == 8.
  .withRootViewYTranslation(4) //Content view&#39;s translationY will be interpolated between 0 and 4. Default == 0
  .addRootTransformation(customTransformation)
  .inject();
&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;customTransformation&lt;/code&gt; in the above example is a user-created class that implements &lt;code class=&quot;highlighter-rouge&quot;&gt;RootTransformation&lt;/code&gt; interface. For an example, refer to the &lt;a href=&quot;library/src/main/java/com/yarolegovich/slidingrootnav/transform&quot;&gt;default transformations&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;menu-behavior&quot;&gt;Menu behavior&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SlidingRootNavBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withMenuOpened&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Initial menu opened/closed state. Default == false&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withMenuLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//If true, a user can&#39;t open or close the menu. Default == false.&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withGravity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SlideGravity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LEFT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//If LEFT you can swipe a menu from left to right, if RIGHT - the direction is opposite. &lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withSavedState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//If you call the method, layout will restore its opened/closed state&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;#### Controling the layout
A call to &lt;code class=&quot;highlighter-rouge&quot;&gt;inject()&lt;/code&gt; returns you an interface for controlling the layout.
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
public interface SlidingRootNav {
    boolean isMenuHidden();
    boolean isMenuLocked();
    void closeMenu();
    void closeMenu(boolean animated);
    void openMenu();
    void openMenu(boolean animated);
    void setMenuLocked(boolean locked);
    SlidingRootNavLayout getLayout(); //If for some reason you need to work directly with layout - you can
}
&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;callbacks&quot;&gt;Callbacks&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Drag progress:
```java
builder.addDragListener(listener);&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;public interface DragListener {
  void onDrag(float progress); //Float between 0 and 1, where 1 is a fully visible menu
}&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Drag state changes:
```java
builder.addDragStateListener(listener);

public interface DragStateListener {
  void onDragStart();
  void onDragEnd(boolean isMenuOpened);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Compatibility with &lt;code class=&quot;highlighter-rouge&quot;&gt;DrawerLayout.DrawerListener&lt;/code&gt;:
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
DrawerListenerAdapter adapter = new DrawerListenerAdapter(yourDrawerListener, viewToPassAsDrawer);
builder.addDragListener(listenerAdapter).addDragStateListener(listenerAdapter);
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;special-thanks&quot;&gt;Special thanks&lt;/h2&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://www.behance.net/yurkivt&quot;&gt;Tayisiya Yurkiv&lt;/a&gt; for a beautiful GIF.&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2017 Yaroslav Shevchuk

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sun, 02 Apr 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/04/02/SlidingRootNav/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/04/02/SlidingRootNav/</guid>
        
        <category>sliding</category>
        
        <category>navi</category>
        
        
      </item>
    
      <item>
        <title>JellyToolbar</title>
        <description>&lt;h1 id=&quot;jellytoolbar&quot;&gt;JellyToolbar&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;[License](http://img.shields.io/badge/license-MIT-green.svg?style=flat)&lt;/a&gt;
&lt;a href=&quot;https://jitpack.io/#yalantis/jellytoolbar&quot;&gt;[](https://jitpack.io/v/yalantis/jellytoolbar.svg)&lt;/a&gt;
&lt;a href=&quot;https://yalantis.com/?utm_source=github&quot;&gt;[Yalantis](https://raw.githubusercontent.com/Yalantis/PullToRefresh/develop/PullToRefreshDemo/Resources/badge_dark.png)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.yalantis.jellyanimation.demo&quot;&gt;&lt;img alt=&quot;Android app on Google Play&quot; src=&quot;https://developer.android.com/images/brand/en_app_rgb_wo_60.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check this &lt;a href=&quot;https://dribbble.com/shots/2092541-Search-Bar-Animation&quot;&gt;project on dribbble&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;gif.gif&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Android SDK 16+&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;Add to your root build.gradle:
&lt;code class=&quot;highlighter-rouge&quot;&gt;Groovy
allprojects {
	repositories {
	  ...
	  maven { url &quot;https://jitpack.io&quot; }
	}
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the dependency:
&lt;code class=&quot;highlighter-rouge&quot;&gt;Groovy
dependencies {
  compile &#39;com.github.yalantis:jellytoolbar:v1.0&#39;
}
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-to-use-this-library-in-your-project&quot;&gt;How to use this library in your project?&lt;/h2&gt;

&lt;p&gt;First of all, add &lt;code class=&quot;highlighter-rouge&quot;&gt;JellyToolbar&lt;/code&gt; to the xml layout of your activity, so it looks like that:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res-auto&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;vertical&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;com.yalantis.jellytoolbar.widget.JellyToolbar&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/toolbar&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:background=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/colorPrimary&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:paddingLeft=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@dimen/activity_horizontal_margin&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:paddingStart=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@dimen/activity_horizontal_margin&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:cancelIcon=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/ic_close&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:endColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/colorEnd&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:icon=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/ic_search&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:startColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/colorStart&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/str_news_feed&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:titleTextColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@android:color/white&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After that pass an instance of the &lt;code class=&quot;highlighter-rouge&quot;&gt;JellyListener&lt;/code&gt; and content view 
(the view which would be inserted to the toolbar) to the &lt;code class=&quot;highlighter-rouge&quot;&gt;JellyToolbar&lt;/code&gt;. 
&lt;code class=&quot;highlighter-rouge&quot;&gt;JellyToolbar&lt;/code&gt; has &lt;code class=&quot;highlighter-rouge&quot;&gt;getToolbar()&lt;/code&gt; method to let you use all the methods of the standard &lt;code class=&quot;highlighter-rouge&quot;&gt;Toolbar&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Java&quot;&gt;public class MainActivity extends AppCompatActivity {

    private JellyToolbar toolbar;
    private AppCompatEditText editText;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        toolbar = (JellyToolbar) findViewById(R.id.toolbar);
        toolbar.getToolbar().setNavigationIcon(R.drawable.ic_menu);
        toolbar.setJellyListener(jellyListener);

        editText = (AppCompatEditText) LayoutInflater.from(this).inflate(R.layout.edit_text, null);
        editText.setBackgroundResource(R.color.colorTransparent);
        toolbar.setContentView(editText);
    }

    private JellyListener jellyListener = new JellyListener() {
        @Override
        public void onCancelIconClicked() {
            if (TextUtils.isEmpty(editText.getText())) {
                toolbar.collapse();
            } else {
                editText.getText().clear();
            }
        }
    };

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To control the animation flow use &lt;code class=&quot;highlighter-rouge&quot;&gt;collapse()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;expand()&lt;/code&gt; methods.&lt;/p&gt;

&lt;p&gt;Override &lt;code class=&quot;highlighter-rouge&quot;&gt;onToolbarExpandingStarted()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;onToolbarCollapsingStarted()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;onToolbarExpanded()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;onToolbarCollapsed()&lt;/code&gt;
methods of the &lt;code class=&quot;highlighter-rouge&quot;&gt;JellyListener&lt;/code&gt; to get all the animation events.&lt;/p&gt;

&lt;h2 id=&quot;let-us-know&quot;&gt;Let us know&lt;/h2&gt;

&lt;p&gt;We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com And do let us know if you have any questions or suggestion regarding the animation.&lt;/p&gt;

&lt;p&gt;P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for iOS (Android) better than better. Stay tuned&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The MIT License (MIT)

Copyright © 2017 Yalantis, https://yalantis.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sun, 02 Apr 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/04/02/JellyToolbar/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/04/02/JellyToolbar/</guid>
        
        <category>Toolbar</category>
        
        
      </item>
    
      <item>
        <title>Ad</title>
        <description>
</description>
        <pubDate>Sat, 01 Apr 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/04/01/AD/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/04/01/AD/</guid>
        
        
      </item>
    
      <item>
        <title>ShimmerRecyclerView</title>
        <description>
</description>
        <pubDate>Wed, 29 Mar 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/03/29/ShimmerRecyclerView/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/03/29/ShimmerRecyclerView/</guid>
        
        <category>RecyclerView</category>
        
        <category>Shimmer</category>
        
        
      </item>
    
      <item>
        <title>HorizontalCalendar</title>
        <description>&lt;h1 id=&quot;horizontal-calendar&quot;&gt;Horizontal Calendar&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://bintray.com/mulham-raee/maven/horizontal-calendar/_latestVersion&quot;&gt; [Download](https://api.bintray.com/packages/mulham-raee/maven/horizontal-calendar/images/download.svg) &lt;/a&gt;
&lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot;&gt;[License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A material horizontal calendar view for Android based on &lt;code class=&quot;highlighter-rouge&quot;&gt;RecyclerView&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/art/demo.gif&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;The library is hosted on jcenter, add this to your &lt;strong&gt;build.gradle&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-gradle&quot;&gt;repositories {
      jcenter()
    }
    
    dependencies {
      compile &#39;devs.mulham.horizontalcalendar:horizontalcalendar:1.1.0&#39;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##Prerequisites
The minimum API level supported by this library is &lt;strong&gt;API 9 (GINGERBREAD)&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;HorizontalCalendarView&lt;/code&gt; to your layout file, for example:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;android.support.design.widget.AppBarLayout&lt;/span&gt;
		&lt;span class=&quot;err&quot;&gt;............&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;devs.mulham.horizontalcalendar.HorizontalCalendarView&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/calendarView&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:background=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/colorPrimary&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;app:textColorSelected=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#FFFF&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/android.support.design.widget.AppBarLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;In your Activity or Fragment, define your &lt;strong&gt;start&lt;/strong&gt; and &lt;strong&gt;end&lt;/strong&gt; dates to set the range of the calendar:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/** end after 1 month from now */&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;endDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MONTH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/** start before 1 month from now */&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;startDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MONTH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Then setup &lt;code class=&quot;highlighter-rouge&quot;&gt;HorizontalCalendar&lt;/code&gt; in your &lt;strong&gt;Activity&lt;/strong&gt; through its Builder:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;HorizontalCalendar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;horizontalCalendar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HorizontalCalendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;calendarView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;endDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Or if you are using a &lt;strong&gt;Fragment&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;HorizontalCalendar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;horizontalCalendar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HorizontalCalendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;calendarView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...................&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;To listen to date change events you need to set a listener:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;horizontalCalendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCalendarListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HorizontalCalendarListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onDateSelected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;//do something&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;You can also listen to &lt;strong&gt;scroll&lt;/strong&gt; and &lt;strong&gt;long press&lt;/strong&gt; events by overriding each prespective method within &lt;strong&gt;HorizontalCalendarListener&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;horizontalCalendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCalendarListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HorizontalCalendarListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onDateSelected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onCalendarScroll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HorizontalCalendarView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calendarView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onDateLongClicked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;/h2&gt;
&lt;p&gt;You can customize it directly inside your layout:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;devs.mulham.horizontalcalendar.HorizontalCalendarView&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/calendarView&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:background=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/colorPrimary&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;app:textColorNormal=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#bababa&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;app:textColorSelected=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#FFFF&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;app:selectorColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#c62828&quot;&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;colorAccent.&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;app:selectedDateBackground=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#00ffffff&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Or you can do it programmatically in your Activity using the &lt;strong&gt;Builder&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;HorizontalCalendar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;horizontalCalendar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HorizontalCalendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;calendarView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;endDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;datesNumberOnScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// Number of Dates cells shown on screen (Recommended 5)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dayNameFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;EEE&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;	  &lt;span class=&quot;c1&quot;&gt;// WeekDay text format&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dayNumberFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// Date format&lt;/span&gt;
				&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;monthFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MMM&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 	  &lt;span class=&quot;c1&quot;&gt;// Month format&lt;/span&gt;
				&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;showDayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;	  &lt;span class=&quot;c1&quot;&gt;// Show or Hide dayName text&lt;/span&gt;
				&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;showMonthName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;	  &lt;span class=&quot;c1&quot;&gt;// Show or Hide month text&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;textColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LTGRAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;WHITE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// Text color for none selected Dates, Text color for selected Date.&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;selectedDateBackground&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TRANSPARENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Background color of the selected date cell.&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;selectorColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// Color of the selection indicator bar (default to colorAccent).&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You can select a specific &lt;strong&gt;Date&lt;/strong&gt; programmatically with the option whether to play the animation or not, with:
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
horizontalCalendar.selectDate(Date date, boolean immediate); // set immediate to false to ignore animation.
  // or simply
horizontalCalendar.goToday(boolean immediate);
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Check if two dates’ &lt;strong&gt;days&lt;/strong&gt; are equal:
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
horizontalCalendar.isDatesDaysEquals(Date date1, Date date2);
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Check if a date is contained in the Calendar:
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
horizontalCalendar.contains(Date date);
&lt;/code&gt;
## Contributing
Contributions are welcome, feel free to submit a pull request.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Copyright 2017  Mulham Raee&lt;/p&gt;

  &lt;p&gt;Licensed under the Apache License, Version 2.0 (the “License”);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an “AS IS” BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the &lt;a href=&quot;/LICENSE&quot;&gt;License&lt;/a&gt; for the specific language governing
permissions and limitations under the License.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Wed, 29 Mar 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/03/29/HorizontalCalendar/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/03/29/HorizontalCalendar/</guid>
        
        <category>Horizontal</category>
        
        <category>Calendar</category>
        
        
      </item>
    
      <item>
        <title>ExcelPanel</title>
        <description>&lt;h1 id=&quot;excelpanel&quot;&gt;excelPanel&lt;/h1&gt;
&lt;p&gt;A two-dimensional RecyclerView. Not only can load historical data, but also can load future data.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zhouchaoyuan/excelPanel/master/app/src/main/assets/roomFormDemo.gif&quot;&gt;demo_gif&lt;/a&gt;
&lt;a href=&quot;https://raw.githubusercontent.com/zhouchaoyuan/excelPanel/master/app/src/main/assets/roomFormDemoAdjustHeight.gif&quot;&gt;demo_gif_adjust_height&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;including-in-your-project&quot;&gt;Including in your project&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;compile &#39;cn.zhouchaoyuan:excelpanel:1.0.3&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;

&lt;p&gt;###1、Write in xml&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;cn.zhouchaoyuan.excelpanel.ExcelPanel&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/content_container&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:left_cell_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@dimen/room_status_cell_length&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:normal_cell_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@dimen/room_status_cell_length&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:top_cell_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@dimen/room_status_cell_length&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Configure using xml attributes&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
app:left_cell_width     //left header cell&#39;s width, not support wrap_content
app:normal_cell_width   //container cell&#39;s width, not support wrap_content
app:top_cell_height     //top header cell&#39;s height, not support wrap_content

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###2、Define your Custom Adapter
Your adapter must extends BaseExcelPanelAdapter and override seven methods show as follow:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Adapter&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseExcelPanelAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RowTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ColTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Adapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//=========================================normal cell=========================================&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RecyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ViewHolder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onCreateCellViewHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ViewGroup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onBindCellViewHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RecyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ViewHolder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;holder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verticalPosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;horizontalPosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//=========================================top cell===========================================&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RecyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ViewHolder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onCreateTopViewHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ViewGroup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onBindTopViewHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RecyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ViewHolder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;holder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//=========================================left cell===========================================&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RecyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ViewHolder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onCreateLeftViewHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ViewGroup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onBindLeftViewHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RecyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ViewHolder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;holder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//=========================================top left cell=======================================&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onCreateTopLeftView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###3、Use your Adapter&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//==============================&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RowTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rowTitles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ColTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colTitles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExcelPanel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;excelPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CustomAdapter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blockListener&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//..........................................&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;excelPanel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExcelPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;content_container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;adapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CustomAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blockListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;excelPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;excelPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnLoadMoreListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//your Activity or Fragment implement ExcelPanel.OnLoadMoreListener&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAllData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;colTitles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rowTitles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;enableFooter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//load more, you can also call disableFooter()----default&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;enableHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//load history, you can also call disableHeader()----default&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If using setOnLoadMoreListener(…) and enableHeader() you must call addHistorySize(int) to tell ExcelPanel how many data have been added.&lt;/p&gt;

&lt;p&gt;#ChangeLog&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;V1.0.1————–line i can be different to line i+1, but the same line’s height must be equals&lt;/li&gt;
  &lt;li&gt;V1.0.2————–support different viewType which using to config different row with different height&lt;/li&gt;
  &lt;li&gt;V1.0.3————–remove adjust height, fix bug when excelPanel in ViewPager&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;#License&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
   Copyright 2017 zhouchaoyuan

   Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 29 Mar 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/03/29/ExcelPanel/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/03/29/ExcelPanel/</guid>
        
        <category>Excel</category>
        
        <category>Panel</category>
        
        
      </item>
    
      <item>
        <title>CoordinatorTabLayout</title>
        <description>&lt;h1 id=&quot;coordinatortablayout&quot;&gt;CoordinatorTabLayout&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/hugeterry/CoordinatorTabLayout/blob/master/LICENSE.txt&quot;&gt;[License](https://img.shields.io/badge/license-Apache%202.0-green.svg)&lt;/a&gt;
&lt;a href=&quot;https://bintray.com/hugeterry/CoordinatorTabLayout/CoordinatorTabLayout/_latestVersion&quot;&gt;[Download](https://api.bintray.com/packages/hugeterry/CoordinatorTabLayout/CoordinatorTabLayout/images/download.svg) &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;README_CN.md&quot;&gt;中文版文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CoordinatorTabLayout is a custom composite control that quickly implements the combination of TabLayout and CoordinatorLayout.
Inherited to the CoordinatorLayout, in the following components used CollapsingToolbarLayout contains TabLayout.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;showUI/show1.gif&quot;&gt;show&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;h3 id=&quot;step-1&quot;&gt;Step 1&lt;/h3&gt;

&lt;p&gt;Add the following to your build.gradle:
&lt;code class=&quot;highlighter-rouge&quot;&gt;
dependencies {
    compile &#39;cn.hugeterry.coordinatortablayout:coordinatortablayout:1.0.6&#39;
}
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-2&quot;&gt;Step 2&lt;/h3&gt;

&lt;p&gt;Config in xml:
```&lt;/p&gt;
&lt;cn.hugeterry.coordinatortablayout.coordinatortablayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot; android:id=&quot;@+id/coordinatortablayout&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt;

    &lt;android.support.v4.view.viewpager android:id=&quot;@+id/vp&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot; /&gt;
&lt;/cn.hugeterry.coordinatortablayout.coordinatortablayout&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;

### Step 3

[show](showUI/show3.gif)&amp;lt;/br&amp;gt;
Use it in your own code:&amp;lt;/br&amp;gt;
1.`setTitle(String title)`:Set the CoordinatorTabLayout&#39;s title.&amp;lt;/br&amp;gt;
2.`setupWithViewPager(ViewPager viewPager)`:To link the two together.&amp;lt;/br&amp;gt;
3.`setImageArray(int[] imageArray)`:Set the image array of the header according to the number of tabs and pass it to the control.&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    //Add the fragment to the viewpager
    initFragments();
    initViewPager();
    //Image array
    mImageArray = new int[]{
            R.mipmap.bg_android,
            R.mipmap.bg_ios,
            R.mipmap.bg_js,
            R.mipmap.bg_other};

    mCoordinatorTabLayout = (CoordinatorTabLayout) findViewById(R.id.coordinatortablayout);
    mCoordinatorTabLayout.setTitle(&quot;Demo&quot;)
            .setImageArray(mImageArray)
            .setupWithViewPager(mViewPager); ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Finish, enjoy it.&lt;/p&gt;

&lt;h2 id=&quot;more&quot;&gt;More&lt;/h2&gt;

&lt;h3 id=&quot;set-the-content-scrim&quot;&gt;Set the content scrim&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;showUI/show2.gif&quot;&gt;show&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;setImageArray(int[] imageArray, int[] colorArray)&lt;/code&gt;:Set the color array to use for the content scrim for each tab.
&lt;code class=&quot;highlighter-rouge&quot;&gt;
        mColorArray = new int[]{
                android.R.color.holo_blue_light,
                android.R.color.holo_red_light,
                android.R.color.holo_orange_light,
                android.R.color.holo_green_light};
        mCoordinatorTabLayout.setImageArray(mImageArray, mColorArray);
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;set-back-enable&quot;&gt;Set back enable&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;setBackEnable(Boolean canBack)&lt;/code&gt;:To enable the Up button for an activity that has a parent activity.
&lt;code class=&quot;highlighter-rouge&quot;&gt;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        ...
        mCoordinatorTabLayout.setBackEnable(true);
        ...
    }
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        if (item.getItemId() == android.R.id.home) {
            finish();
        }
        return super.onOptionsItemSelected(item);
    }
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;load-header-images-from-network&quot;&gt;Load header images from network&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;setLoadHeaderImagesListener(LoadHeaderImagesListener loadHeaderImagesListener)&lt;/code&gt;:Set the listener that gets the header images.
&lt;code class=&quot;highlighter-rouge&quot;&gt;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        ...
        mCoordinatorTabLayout.setTitle(&quot;Demo&quot;)
                .setBackEnable(true)
                .setContentScrimColorArray(mColorArray)
                .setLoadHeaderImagesListener(new LoadHeaderImagesListener() {
                    @Override
                    public void loadHeaderImages(ImageView imageView, TabLayout.Tab tab) {
                        switch (tab.getPosition()) {
                            case 0:
                                //load header images
                                break;
                            ...
                        }
                    }
                })
                .setupWithViewPager(mViewPager);
    }
&lt;/code&gt;
You also can load header images using glide/picasso，&lt;a href=&quot;https://github.com/hugeterry/CoordinatorTabLayout/blob/master/sample/src/main/java/cn/hugeterry/coordinatortablayoutdemo/LoadHeaderImageFromNetworkActivity.java&quot;&gt;Sample&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;gets-the-child-control&quot;&gt;Gets the child control&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getActionBar()&lt;/code&gt;:get the ActionBar&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;getTabLayout()&lt;/code&gt;:get the TabLayout&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;getImageView()&lt;/code&gt;:get the ImageView&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/hugeterry/CoordinatorTabLayout/blob/master/sample/src/main/java/cn/hugeterry/coordinatortablayoutdemo/MainActivity.java&quot;&gt;More code&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;attributes&quot;&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app:contentScrim&lt;/code&gt; -&amp;gt; color.Defaults to ?attr/colorPrimary&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app:tabIndicatorColor&lt;/code&gt; -&amp;gt; color.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app:tabTextColor&lt;/code&gt; -&amp;gt; color.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://fir.im/ctlayout&quot;&gt;http://fir.im/ctlayout&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;LICENSE&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2017 HugeTerry.
Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Wed, 29 Mar 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/03/29/CoordinatorTabLayout/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/03/29/CoordinatorTabLayout/</guid>
        
        <category>Coordinator</category>
        
        <category>TabLayout</category>
        
        
      </item>
    
      <item>
        <title>MusicPlayer</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;[License Apache 2.0](https://img.shields.io/badge/License-Apache%202.0-blue.svg?style=true)&lt;/a&gt;
&lt;a href=&quot;https://img.shields.io/badge/minSdkVersion-21-red.svg?style=true&quot;&gt;minSdkVersion 21&lt;/a&gt;
&lt;a href=&quot;https://img.shields.io/badge/compileSdkVersion-24-yellow.svg?style=true&quot;&gt;compileSdkVersion 24&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://android-arsenal.com/details/3/3855&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Music–Player-green.svg?style=true)&lt;/a&gt;
&lt;a href=&quot;https://www.uplabs.com/posts/music-player-open-source-apps&quot;&gt;[MaterialUp Music-Player](https://img.shields.io/badge/MaterialUp-Music–Player-blue.svg?style=true)&lt;/a&gt;
&lt;a href=&quot;https://androidsweets.ongoodbits.com/2016/07/14/issue-27&quot;&gt;[Android Sweets #27](https://img.shields.io/badge/Android%20Sweets-%2327-ff69b4.svg?style=true)&lt;/a&gt;
&lt;a href=&quot;https://android.libhunt.com/newsletter/22&quot;&gt;[Awesome Android #22](https://img.shields.io/badge/Awesome%20Android-%2322-green.svg?style=true)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/andremion/Music-Player/master/app/src/main/res/mipmap-hdpi/ic_launcher.png&quot;&gt;Icon&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;music-player-from-ui-proposal-to-code&quot;&gt;Music Player: From UI Proposal to Code&lt;/h1&gt;

&lt;p&gt;Some developers have difficult to code when the UI proposal is a bit “sophisticated” or “complex”. Many of them strip a lot of significant portion of the UI or even the Motion when they are coding, and the result ends up quite different of the original proposal.&lt;/p&gt;

&lt;p&gt;This article talks about how would be to code an UI proposal, skipping some basic Android details and focusing in the transition and animation approach…&lt;/p&gt;

&lt;p&gt;Read more at https://medium.com/@andremion/music-player-3a85864d6df7#.iklz50r6n&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;a href=&quot;https://dribbble.com/shots/1850527-Music-Player-Transition&quot;&gt;Transition&lt;/a&gt; by &lt;a href=&quot;https://dribbble.com/anish_chandran&quot;&gt;Anish Chandran&lt;/a&gt;&lt;/th&gt;
      &lt;th&gt;Code by &lt;a href=&quot;https://github.com/andremion&quot;&gt;André Mion&lt;/a&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/andremion/Music-Player/master/art/music_player_concept_cropped.gif&quot;&gt;Transition by Anish Chandran&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/andremion/Music-Player/master/art/music_player_code.gif&quot;&gt;Code by André Mion&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.sample.andremion.musicplayer&quot;&gt;[Get it on Google Play](https://developer.android.com/images/brand/en_generic_rgb_wo_60.png)&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;libraries-and-tools-used-in-the-project&quot;&gt;Libraries and tools used in the project&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.android.com/intl/pt-br/tools/support-library/features.html#design&quot;&gt;Design Support Library&lt;/a&gt;
The Design package provides APIs to support adding material design components and patterns to your apps.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/andremion/Music-Cover-View&quot;&gt;MusicCoverView&lt;/a&gt;
A Subclass of ImageView that ‘morphs’ into a circle shape and can rotates. Useful to be used as album cover in Music apps.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.android.com/intl/pt-br/reference/android/support/v7/widget/RecyclerView.html&quot;&gt;RecyclerView&lt;/a&gt;
A flexible view for providing a limited window into a large data set.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.android.com/reference/android/support/percent/PercentRelativeLayout.html&quot;&gt;PercentRelativeLayout&lt;/a&gt;
Subclass of RelativeLayout that supports percentage based dimensions and margins.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 André Mion

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Tue, 28 Mar 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/03/28/MusicPlayer/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/03/28/MusicPlayer/</guid>
        
        <category>music</category>
        
        <category>player</category>
        
        
      </item>
    
      <item>
        <title>StatusView</title>
        <description>
</description>
        <pubDate>Mon, 27 Mar 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/03/27/StatusView/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/03/27/StatusView/</guid>
        
        <category>Status</category>
        
        
      </item>
    
      <item>
        <title>FancyShowCaseView</title>
        <description>&lt;h1 id=&quot;fancyshowcaseview-statushttpstravis-ciorgfaruktoptasfancyshowcaseviewsvgbranchmasterhttpstravis-ciorgfaruktoptasfancyshowcaseview-httpsjitpackiovfaruktoptasfancyshowcaseviewsvghttpsjitpackiofaruktoptasfancyshowcaseview--android-arsenalhttpsimgshieldsiobadgeandroid20arsenal-fancyshowcaseview-brightgreensvgstyleflathttpsandroid-arsenalcomdetails15440-apihttpsimgshieldsiobadgeapi-102b-bluesvgstyleflathttpsandroid-arsenalcomapilevel10&quot;&gt;FancyShowCaseView &lt;a href=&quot;https://travis-ci.org/faruktoptas/FancyShowCaseView&quot;&gt;[Status](https://travis-ci.org/faruktoptas/FancyShowCaseView.svg?branch=master)&lt;/a&gt; &lt;a href=&quot;https://jitpack.io/#faruktoptas/FancyShowCaseView&quot;&gt;[](https://jitpack.io/v/faruktoptas/FancyShowCaseView.svg)&lt;/a&gt;  &lt;a href=&quot;https://android-arsenal.com/details/1/5440&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-FancyShowCaseView-brightgreen.svg?style=flat)&lt;/a&gt; &lt;a href=&quot;https://android-arsenal.com/api?level=10&quot;&gt;[API](https://img.shields.io/badge/API-10%2B-blue.svg?style=flat)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;An easy-to-use customizable show case view with circular reveal animation.&lt;/p&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Circular reveal animation (API Level 21+)&lt;/li&gt;
  &lt;li&gt;Background color&lt;/li&gt;
  &lt;li&gt;Circle and Rounded Rectangle focus shapes&lt;/li&gt;
  &lt;li&gt;Title style and position&lt;/li&gt;
  &lt;li&gt;Custom view inflation&lt;/li&gt;
  &lt;li&gt;Custom enter/exit animations&lt;/li&gt;
  &lt;li&gt;Chaining multiple FancyShowCaseView instances&lt;/li&gt;
  &lt;li&gt;Showing only one time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.githubusercontent.com/assets/1595227/24331187/ad143b80-1237-11e7-919c-36111c1ce559.gif&quot;&gt;gif&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.githubusercontent.com/assets/1595227/24331189/afec8d9e-1237-11e7-986d-0ab7c44db7c7.gif&quot;&gt;gif&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;gradle-dependency&quot;&gt;Gradle Dependency&lt;/h1&gt;

&lt;p&gt;Add this in your root &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file (&lt;strong&gt;not&lt;/strong&gt; your module &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-gradle&quot;&gt;allprojects {
	repositories {
		...
		maven { url &quot;https://jitpack.io&quot; }
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, add the library to your module &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;gradle
dependencies {
    com.github.faruktoptas:FancyShowCaseView:latest.release.here
}
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;sample-usage&quot;&gt;Sample Usage&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FancyShowCaseView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;focusOn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Focus on View&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;## Rounded Rectangle
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
new FancyShowCaseView.Builder(this)
        .focusOn(view)
        .title(&quot;Focus on View&quot;)
        .focusShape(FocusShape.ROUNDED_RECTANGLE)
        .build()
        .show();
&lt;/code&gt;
## Customize
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
new FancyShowCaseView.Builder(this)
        .focusOn(view)
        .focusCircleRadiusFactor(1.5)
        .title(&quot;Focus on View with larger circle&quot;)
        .titleStyle(0, Gravity.BOTTOM | Gravity.CENTER)
        .enterAnimation(enterAnimation)
        .exitAnimation(exitAnimation)
        .showOnce(&quot;fancy1&quot;)
        .backgroundColor(Color.parseColor(&quot;#CC00FF00&quot;))
        .build()
        .show();
&lt;/code&gt;
## Inflating Custom View
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
new FancyShowCaseView.Builder(this)
        .customView(R.layout.layout_my_custom_view, null)
        .build()
        .show();
&lt;/code&gt;
## Queuing multiple instances
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
new FancyShowCaseQueue()
	    .add(fancyShowCaseView1)
	    .add(fancyShowCaseView2)
	    .add(fancyShowCaseView3)
	    .show();
&lt;/code&gt;
## Already in use in following apps
(feel free to send me new projects)
* &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.moblino.countrynews&quot;&gt;News - Newspaper &amp;amp; Magazine&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;contribute&quot;&gt;Contribute&lt;/h2&gt;
&lt;p&gt;You can contribute by opening a pull request to &lt;strong&gt;dev&lt;/strong&gt; branch.
Please try to push one feature in one commit for a clean commit history.&lt;/p&gt;

&lt;h1 id=&quot;license&quot;&gt;License&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2017 Faruk Toptaş

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 27 Mar 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/03/27/FancyShowCaseView/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/03/27/FancyShowCaseView/</guid>
        
        <category>ShowCase</category>
        
        
      </item>
    
  </channel>
</rss>
