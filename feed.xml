<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android UI OpenSource</title>
    <description>Collection of OpenSource for Android UI.</description>
    <link>http://kmshack.github.io/AndroidUICollection/</link>
    <atom:link href="http://kmshack.github.io/AndroidUICollection/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 13 Mar 2017 21:09:17 +0900</pubDate>
    <lastBuildDate>Mon, 13 Mar 2017 21:09:17 +0900</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>DiscreteScrollView</title>
        <description>&lt;h1 id=&quot;discretescrollview&quot;&gt;DiscreteScrollView&lt;/h1&gt;

&lt;p&gt;The library is a RecyclerView-based implementation of a scrollable list, where current item is centered and can be changed using swipes.
It is similar to a ViewPager, but you can quickly and painlessly create layout, where views adjacent to the currently selected view are partially or fully visible on the screen.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yarolegovich/DiscreteScrollView/blob/master/images/cards_shop.gif&quot;&gt;GifSampleShop&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;gradle&quot;&gt;Gradle&lt;/h2&gt;
&lt;p&gt;Add this into your dependencies block.
&lt;code class=&quot;highlighter-rouge&quot;&gt;
compile &#39;com.yarolegovich:discrete-scrollview:1.0.3&#39;
&lt;/code&gt;
## Sample
&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.yarolegovich.discretescrollview.sample&quot;&gt;&lt;img alt=&quot;Get it on Google Play&quot; src=&quot;https://play.google.com/intl/en_us/badges/images/apps/en-play-badge.png&quot; width=&quot;185&quot; height=&quot;60&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Please see the [sample app] (https://github.com/yarolegovich/DiscreteScrollView/tree/master/sample/src/main/java/com/yarolegovich/discretescrollview/sample) for examples of library usage.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yarolegovich/DiscreteScrollView/blob/master/images/cards_weather.gif&quot;&gt;GifSampleWeather&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;wiki&quot;&gt;Wiki&lt;/h2&gt;
&lt;p&gt;### General
The library uses a custom LayoutManager to adjust items’ positions on the screen and handle scroll, however it is not exposed to the client 
code. All public API is accessible through DiscreteScrollView class, which is a simple descendant of RecyclerView.&lt;/p&gt;

&lt;p&gt;If you have ever used RecyclerView - you already know how to use this library. One thing to note - you should NOT set LayoutManager.&lt;/p&gt;

&lt;h4 id=&quot;usage&quot;&gt;Usage:&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Add DiscreteScrollView to your layout either using xml or code:&lt;/li&gt;
  &lt;li&gt;Create your implementation of RecyclerView.Adapter. Refer to the [sample] (https://github.com/yarolegovich/DiscreteScrollView/blob/master/sample/src/main/java/com/yarolegovich/discretescrollview/sample/shop/ShopAdapter.java) for an example, if you don’t know how to do it.&lt;/li&gt;
  &lt;li&gt;Set the adapter.&lt;/li&gt;
  &lt;li&gt;You are done 
```xml&lt;/li&gt;
&lt;/ol&gt;
&lt;com.yarolegovich.discretescrollview.discretescrollview android:id=&quot;@+id/picker&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```java
DiscreteScrollView scrollView = findViewById(R.id.picker);
scrollView.setAdapter(new YourAdapterImplementation());
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;api&quot;&gt;API&lt;/h3&gt;
&lt;p&gt;#### Related to the current item:
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
scrollView.getCurrentItem(); //returns adapter position of the currently selected item or -1 if adapter is empty.
scrollView.scrollToPosition(int position); //position becomes selected
scrollView.smoothScrollToPosition(int position); //position becomes selected with animated scroll
scrollView.setItemTransitionTimeMillis(int millis); //determines how much time it takes to change the item on fling, settle or smoothScroll
&lt;/code&gt;
#### Transformations
One useful feature of ViewPager is page transformations. It allows you, for example, to create carousel effect. DiscreteScrollView also supports 
page transformations.
```java
scrollView.setItemTransformer(transformer);&lt;/p&gt;

&lt;p&gt;public interface DiscreteScrollItemTransformer {
    /**
     * In this method you apply any transform you can imagine (perfomance is not guaranteed).
     * @param position is a value inside the interval [-1f..1f]. In idle state:
     * |view1|  |currentlySelectedView|  |view2|
     * -view1 and everything to the left is on position -1;
     * -currentlySelectedView is on position 0;
     * -view2 and everything to the right is on position 1.
     */
    void transformItem(View item, float position); 
}
&lt;code class=&quot;highlighter-rouge&quot;&gt;
Because scale transformation is the most common, I included a helper class - ScaleTransformer, here is how to use it:
&lt;/code&gt;java
cityPicker.setItemTransformer(new ScaleTransformer.Builder()
  .setMaxScale(1.05f) 
  .setMinScale(0.8f) 
  .setPivotX(Pivot.X.CENTER) // CENTER is a default one
  .setPivotY(Pivot.Y.BOTTOM) // CENTER is a default one
  .build());
```
You may see how it works on GIFs.&lt;/p&gt;

&lt;h4 id=&quot;callbacks&quot;&gt;Callbacks&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Scroll state changes:
```java
scrollView.setScrollStateChangeListener(listener);&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;public interface ScrollStateChangeListener&lt;t extends=&quot;&quot; viewholder=&quot;&quot;&gt; {
  void onScrollStart(T currentItemHolder, int adapterPosition); //called when scroll is started, including programatically initiated scroll
  void onScrollEnd(T currentItemHolder, int adapterPosition); //called when scroll ends
  /**
   * Called when scroll is in progress. 
   * @param scrollPosition is a value inside the interval [-1f..1f], it corresponds to the position of currentlySelectedView.
   * In idle state:
   * |view1|  |currentlySelectedView|  |view2|
   * -view1 is on position -1;
   * -currentlySelectedView is on position 0;
   * -view2 is on position 1.
   */
  void onScroll(float scrollPosition); 
}
```
* Current selection changes:
```java
scrollView.setCurrentItemChangeListener(listener);&lt;/t&gt;&lt;/p&gt;

&lt;p&gt;public interface CurrentItemChangeListener&lt;t extends=&quot;&quot; viewholder=&quot;&quot;&gt; {
  /**
   * Called when new item is selected. It is similar to the onScrollEnd of ScrollStateChangeListener, except that it is 
   * also called when currently selected item appears on the screen for the first time.
   */
  void onCurrentItemChanged(T viewHolder, int adapterPosition); 
}
```&lt;/t&gt;&lt;/p&gt;

&lt;h2 id=&quot;special-thanks&quot;&gt;Special thanks&lt;/h2&gt;
&lt;p&gt;Thanks to [Tayisiya Yurkiv] (https://www.behance.net/yurkivt) for sample app design and beautiful GIFs.&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2017 Yaroslav Shevchuk

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 13 Mar 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/03/13/DiscreteScrollView/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/03/13/DiscreteScrollView/</guid>
        
        <category>scrollView</category>
        
        
      </item>
    
      <item>
        <title>InstaCropper</title>
        <description>&lt;h1 id=&quot;instacropper&quot;&gt;InstaCropper&lt;/h1&gt;
&lt;p&gt;A View for cropping images that is similar to Instagram’s crop. Also an Activity for cropping is included.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.githubusercontent.com/assets/4597931/23830368/724ddf70-071e-11e7-9d7e-65615be8d5e6.gif&quot;&gt;alt tag&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;##Usage&lt;/p&gt;

&lt;p&gt;Add the dependency:
&lt;code class=&quot;highlighter-rouge&quot;&gt;Groovy
dependencies {
	compile &#39;com.yashoid:instacropper:1.0.0&#39;
}
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-to-use-this-library&quot;&gt;How to use this library&lt;/h2&gt;

&lt;p&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;InstaCropperView&lt;/code&gt; to your xml layout&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;FrameLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res-auto&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;com.yashoid.instacropper.InstaCropperView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/instacropper&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:backgroundColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@android:color/white&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FrameLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;InstaCropperView receives only Uri but any Uri is possible.
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
mInstaCropper.setImageUri(imageUri);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can specify three size ratios for the crop. The narrowest allowed, the widest allowed and the ideal ratio. The View will adjust its size by the ideal ratio.
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
mInstaCropper.setRatios(defaultRatio, minimumRatio, maximumRatio);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The cropped image is returned in a callback. You can specify MeasureSpec to adjust the width and height of the returned Bitmap.
```java
mInstaCropper.crop(
        View.MeasureSpec.makeMeasureSpec(1024, View.MeasureSpec.AT_MOST),
        View.MeasureSpec.makeMeasureSpec(0, View.MeasureSpec.UNSPECIFIED),
        new InstaCropperView.BitmapCallback() {&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        @Override
        public void onBitmapReady(Bitmap bitmap) {
            // Do something.
        }
        
    } ); ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It is also possible to use the crop feature via an Intent call. There are various &lt;code class=&quot;highlighter-rouge&quot;&gt;getIntent()&lt;/code&gt; methods defined on &lt;code class=&quot;highlighter-rouge&quot;&gt;InstaCropperActivity&lt;/code&gt;. You will then receive the crop result in &lt;code class=&quot;highlighter-rouge&quot;&gt;data.getData()&lt;/code&gt;.
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
Intent intent = InstaCropperActivity.getIntent(context, srcUri, dstUri, maxWidth, outputQuality);
startActivityForResult(intent, REQUEST_CROP);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To change the title of the crop Activity and the title of the crop action define the string.
```xml&lt;/p&gt;
&lt;string name=&quot;instacropper_title&quot;&gt;Crop&lt;/string&gt;
&lt;string name=&quot;instacropper_crop&quot;&gt;Crop&lt;/string&gt;
&lt;p&gt;```&lt;/p&gt;

</description>
        <pubDate>Sun, 12 Mar 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/03/12/InstaCropper/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/03/12/InstaCropper/</guid>
        
        <category>cropper</category>
        
        
      </item>
    
      <item>
        <title>Alerter</title>
        <description>&lt;h1 id=&quot;alerter&quot;&gt;Alerter&lt;/h1&gt;

&lt;h3 id=&quot;general&quot;&gt;General&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://bintray.com/tapadoo/maven/alerter/_latestVersion&quot;&gt; [Download](https://api.bintray.com/packages/tapadoo/maven/alerter/images/download.svg) &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://android-arsenal.com/details/1/5302&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Alerter-blue.svg?style=flat)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This library aims to overcome the limitations of Toasts and Snackbars, while reducing the
complexity of your layouts.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./documentation/alert_default.gif&quot;&gt;Default Alert&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A customisable Alert view is dynamically added to the Decor View of the Window, overlaying
all content.&lt;/p&gt;

&lt;h2 id=&quot;gradle&quot;&gt;Gradle&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;com.tapadoo.android:alerter:1.0.6&#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;

&lt;p&gt;With simplicity in mind, the Alerter employs the builder pattern to facilitate easy integration
into any app.&lt;/p&gt;

&lt;p&gt;From an Activity -&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Alerter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert Title&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert text...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Or from a Fragment -&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Alerter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert Title&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert text...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;customisation&quot;&gt;Customisation&lt;/h1&gt;

&lt;h3 id=&quot;background-colour&quot;&gt;Background Colour&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Alerter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert Title&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert text...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBackgroundColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;colorAccent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;./documentation/alert_coloured.gif&quot;&gt;Coloured Alert&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;icon&quot;&gt;Icon&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Alerter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert text...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setIcon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;alerter_ic_face&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;./documentation/alert_icon.gif&quot;&gt;Custom Icon Alert&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;on-screen-duration-in-milliseconds&quot;&gt;On screen duration, in milliseconds&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Alerter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert Title&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert text...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;without-title&quot;&gt;Without title&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Alerter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert text...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;./documentation/alert_text_only.gif&quot;&gt;Text Only Alert&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;adding-an-on-click-listener&quot;&gt;Adding an On Click Listener&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;Alerter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExampleActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert Title&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert text...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExampleActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;OnClick Called&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_LONG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;./documentation/alert_on_click.gif&quot;&gt;On Click Alert&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;verbose-text&quot;&gt;Verbose text&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;Alerter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExampleActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert Title&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The alert scales to accommodate larger bodies of text. &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
                 &lt;span class=&quot;s&quot;&gt;&quot;The alert scales to accommodate larger bodies of text. &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
                 &lt;span class=&quot;s&quot;&gt;&quot;The alert scales to accommodate larger bodies of text.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;./documentation/alert_verbose.gif&quot;&gt;Verbose Alert&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;visibility-callbacks&quot;&gt;Visibility Callbacks&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;Alerter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExampleActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alert Title&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnShowListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnShowAlertListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onShow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExampleActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Alert Shown&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_LONG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnHideListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnHideAlertListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onHide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExampleActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Alert Hidden&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_LONG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;sample&quot;&gt;Sample&lt;/h2&gt;

&lt;p&gt;Clone this repo and check out the &lt;code class=&quot;highlighter-rouge&quot;&gt;app&lt;/code&gt; module.&lt;/p&gt;

&lt;h2 id=&quot;licence&quot;&gt;Licence&lt;/h2&gt;

&lt;p&gt;See the &lt;a href=&quot;LICENSE.md&quot;&gt;LICENSE&lt;/a&gt; file for license rights and limitations (MIT).&lt;/p&gt;

&lt;p&gt;Copyright 2016 Tapadoo, Dublin.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tapadoo.com/wp-content/themes/tapadoo/img/tapadoo-logo@2x.png&quot;&gt;Alt Text&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 20 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/02/20/Alerter/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/02/20/Alerter/</guid>
        
        <category>alert</category>
        
        
      </item>
    
      <item>
        <title>Android Material Stepper</title>
        <description>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./art/material-stepper-logo.png&quot; width=&quot;256&quot; height=&quot;256&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;# Android Material Stepper &lt;a href=&quot;https://travis-ci.org/stepstone-tech/android-material-stepper&quot;&gt;[Build Status](https://travis-ci.org/stepstone-tech/android-material-stepper.svg?branch=master)&lt;/a&gt; &lt;a href=&quot;https://android-arsenal.com/details/1/5138&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Android%20Material%20Stepper-brightgreen.svg?style=flat)&lt;/a&gt; &lt;a href=&quot;http://androidweekly.net/issues/issue-243&quot;&gt;[Android Weekly](https://img.shields.io/badge/Android%20Weekly-%23243-brightgreen.svg)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This library allows to use Material steppers inside Android applications.&lt;/p&gt;

&lt;p&gt;Quoting the &lt;a href=&quot;https://www.google.com/design/spec/components/steppers.html&quot;&gt;documentation&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Steppers display progress through a sequence by breaking it up into multiple logical and numbered steps.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;download-from-jcenter&quot;&gt;Download (from JCenter)&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;com.stepstone.stepper:material-stepper:3.0.0&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;supported-steppers&quot;&gt;Supported steppers&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Mobile stepper with dots &lt;br /&gt;
&lt;img src=&quot;./gifs/dotted-progress-bar.gif&quot; width=&quot;360&quot; height=&quot;640&quot; /&gt;  &lt;img src=&quot;./gifs/dotted-progress-bar-styled.gif&quot; width=&quot;360&quot; height=&quot;640&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Mobile stepper with progress bar &lt;br /&gt;
&lt;img src=&quot;./gifs/linear-progress-bar.gif&quot; width=&quot;360&quot; height=&quot;640&quot; /&gt;  &lt;img src=&quot;./gifs/linear-progress-bar-styled.gif&quot; width=&quot;360&quot; height=&quot;640&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Horizontal stepper &lt;br /&gt;
&lt;img src=&quot;./gifs/tabs.gif&quot; width=&quot;640&quot; height=&quot;360&quot; /&gt;
&lt;img src=&quot;./gifs/tabs-styled.gif&quot; width=&quot;640&quot; height=&quot;360&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;supported-features&quot;&gt;Supported features&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;color customisation of individual widgets inside of the stepper via View attributes or a style from a theme&lt;/li&gt;
  &lt;li&gt;custom texts of individual widgets inside of the stepper via View attributes or a style from a theme&lt;/li&gt;
  &lt;li&gt;embedding the stepper anywhere in the view hierarchy and changing the stepper type for various device configurations, e.g. phone/tablet, portrait/landscape&lt;/li&gt;
  &lt;li&gt;step validation&lt;/li&gt;
  &lt;li&gt;use with Fragments or Views&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting started&lt;/h2&gt;

&lt;h3 id=&quot;create-layout-in-xml&quot;&gt;Create layout in XML&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.stepstone.stepper.StepperLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res-auto&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/stepperLayout&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;vertical&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app:ms_stepperType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;progress_bar&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For a complete list of StepperLayout attributes see &lt;a href=&quot;#StepperLayout attributes&quot;&gt;StepperLayout attributes&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;create-step-fragments&quot;&gt;Create step Fragment(s)&lt;/h3&gt;
&lt;p&gt;Step fragments must extend &lt;a href=&quot;http://developer.android.com/reference/android/support/v4/app/Fragment.html&quot;&gt;android.support.v4.app.Fragment&lt;/a&gt;
and implement &lt;code class=&quot;highlighter-rouge&quot;&gt;com.stepstone.stepper.Step&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StepFragmentSample&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fragment&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onCreateView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LayoutInflater&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ViewGroup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//initialize your UI&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VerificationError&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verifyStep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//return null if the user can go to the next step, create a new VerificationError instance otherwise&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onSelected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//update UI when selected&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@NonNull&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VerificationError&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//handle error inside of the fragment, e.g. show error on EditText&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;extend-abstractfragmentstepadapter&quot;&gt;Extend AbstractFragmentStepAdapter&lt;/h3&gt;
&lt;p&gt;AbstractFragmentStepAdapter extends &lt;a href=&quot;http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html&quot;&gt;FragmentPagerAdapter&lt;/a&gt;
but instead of overriding the method &lt;code class=&quot;highlighter-rouge&quot;&gt;getItem(int)&lt;/code&gt; you must override the &lt;code class=&quot;highlighter-rouge&quot;&gt;createStep(int)&lt;/code&gt; method.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyStepperAdapter&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AbstractFragmentStepAdapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyStepperAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FragmentManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Step&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createStep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StepFragmentSample&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StepFragmentSample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CURRENT_STEP_POSITION_KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setArguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@NonNull&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StepViewModel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getViewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@IntRange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//Override this method to set Step title for the Tabs, not necessary for other stepper types&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StepViewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tab_title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//can be a CharSequence instead&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;set-adapter-in-activity&quot;&gt;Set adapter in Activity&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StepperActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StepperLayout&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mStepperLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mStepperLayout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StepperLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stepperLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mStepperLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyStepperAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getSupportFragmentManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;add-a-stepperlistener-in-the-activity-optional&quot;&gt;Add a StepperListener in the Activity (optional)&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StepperActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StepperLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;StepperListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mStepperLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onCompleted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completeButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;onCompleted&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VerificationError&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verificationError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;onError -&amp;gt; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verificationError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getErrorMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onStepSelected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newStepPosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;onStepSelected -&amp;gt; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newStepPosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;finish&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;change-nextcomplete-buttons-text-color-when-going-to-the-next-step-should-be-disabled-optional&quot;&gt;Change Next/Complete button’s text color when going to the next step should be disabled (optional)&lt;/h3&gt;
&lt;p&gt;It is possible to change the Next/Complete button’s text color (together with right chevron’s color)
when all the criteria to go to the next step are not met. This color should indicate that
the user cannot go to next step yet and look as if disabled. Clicking on the button will still perform the regular
step verification. There is a custom state added since setting &lt;code class=&quot;highlighter-rouge&quot;&gt;android:state_enabled&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; in a color selector would disable the clicks
and we want to have them so that we can show an info message for the user.
In order to set that color:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Create a new color selector in &lt;code class=&quot;highlighter-rouge&quot;&gt;res/color&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;```xml
 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;/p&gt;
    &lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&gt;
     &lt;item app:state_verification_failed=&quot;true&quot; android:color=&quot;#30BDBDBD&quot; /&gt;
     &lt;item android:color=&quot;@color/ms_white&quot; /&gt;
 &lt;/selector&gt;
    &lt;p&gt;```&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change button’s (text) color in layout file&lt;/p&gt;

    &lt;p&gt;```xml
 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;/p&gt;
    &lt;com.stepstone.stepper.stepperlayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot; android:id=&quot;@+id/stepperLayout&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; app:ms_steppertype=&quot;dots&quot; app:ms_nextbuttoncolor=&quot;@color/ms_custom_button_text_color&quot; app:ms_completebuttoncolor=&quot;@color/ms_custom_button_text_color&quot; /&gt;

    &lt;p&gt;```&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Toggle the state in code&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;java
 mStepperLayout.setNextButtonVerificationFailed(enabled);
 mStepperLayout.setCompleteButtonVerificationFailed(enabled);
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;make-an-io-operation-before-going-to-the-next-step-optional&quot;&gt;Make an IO operation before going to the next step (optional)&lt;/h3&gt;
&lt;p&gt;If the user wants to e.g. save something in the database or make a network call on a separate Thread after clicking on the Next button
he can perform these operations and then invoke the &lt;code class=&quot;highlighter-rouge&quot;&gt;goToNextStep()&lt;/code&gt; method of the &lt;code class=&quot;highlighter-rouge&quot;&gt;StepperLayout.OnNextClickedCallback&lt;/code&gt; in the current Step.
While operations are performed, and the user would like to go back you can cancel them and then invoke &lt;code class=&quot;highlighter-rouge&quot;&gt;onBackClicked()&lt;/code&gt; method of the &lt;code class=&quot;highlighter-rouge&quot;&gt;StepperLayout.OnBackClickedCallback&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./gifs/delayed-transition.gif&quot; width=&quot;360&quot; height=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The fragment must implement &lt;code class=&quot;highlighter-rouge&quot;&gt;BlockingStep&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;Step&lt;/code&gt;.
Also, make sure that &lt;code class=&quot;highlighter-rouge&quot;&gt;goToNextStep()&lt;/code&gt; gets called on the main thread.
&lt;strong&gt;Note:&lt;/strong&gt; the &lt;code class=&quot;highlighter-rouge&quot;&gt;onNextClicked(StepperLayout.OnNextClickedCallback)&lt;/code&gt; method gets invoked after step verification.
E.g.:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DelayedTransitionStepFragmentSample&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fragment&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BlockingStep&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@UiThread&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onNextClicked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StepperLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnNextClickedCallback&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;postDelayed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;goToNextStep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@UiThread&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onBackClicked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StepperLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnBackClickedCallback&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Your custom back action. Here you should cancel currently running operations&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;goToPrevStep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;changing-backnext-button-labels--compound-drawables-per-step&quot;&gt;Changing Back/Next button labels &amp;amp; compound drawables per step&lt;/h3&gt;
&lt;p&gt;Sometimes you might want to have different labels on the Next and/or Back navigation buttons on different steps e.g. use the default labels on the first few steps,
but display ‘Summary’ just before the last page.
You might also want to use your custom icons instead of the default navigation button compound drawables or not show the compound drawables for some of the buttons.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./gifs/custom-navigation-buttons.gif&quot; width=&quot;360&quot; height=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;In such case you need to override the &lt;code class=&quot;highlighter-rouge&quot;&gt;getViewModel(int)&lt;/code&gt; method from the &lt;code class=&quot;highlighter-rouge&quot;&gt;StepAdapter&lt;/code&gt; e.g.
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
    @NonNull
    @Override
    public StepViewModel getViewModel(@IntRange(from = 0) int position) {
        StepViewModel.Builder builder = new StepViewModel.Builder(context)
                .setTitle(R.string.tab_title);
        switch (position) {
            case 0:
                builder
                    .setNextButtonLabel(&quot;This way&quot;)
                    .setBackButtonLabel(&quot;Cancel&quot;)
                    .setNextButtonEndDrawableResId(R.drawable.ms_forward_arrow)
                    .setBackButtonStartDrawableResId(StepViewModel.NULL_DRAWABLE);
                break;
            case 1:
                builder
                    .setNextButtonLabel(R.string.go_to_summary)
                    .setBackButtonLabel(&quot;Go to first&quot;)
                    .setBackButtonStartDrawableResId(R.drawable.ms_back_arrow);
                break;
            case 2:
                builder.setBackButtonLabel(&quot;Go back&quot;);
                break;
            default:
                throw new IllegalArgumentException(&quot;Unsupported position: &quot; + position);
        }
        return builder.create();
    }
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;using-the-same-stepper-styling-across-the-application&quot;&gt;Using the same stepper styling across the application&lt;/h3&gt;
&lt;p&gt;If you have many steppers in your application in different activities/fragments you might want to set a common style in a theme.
To do so, you need to set the &lt;code class=&quot;highlighter-rouge&quot;&gt;ms_stepperStyle&lt;/code&gt; attribute in the theme, e.g.
```xml
    &lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;&gt;
        ...&lt;/style&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;item name=&quot;ms_stepperStyle&quot;&amp;gt;@style/DotStepperStyle&amp;lt;/item&amp;gt;
&amp;lt;/style&amp;gt; ``` and declare that style in the XML you keep your styles at, e.g. ```xml
&amp;lt;style name=&quot;DotStepperStyle&quot;&amp;gt;
    &amp;lt;item name=&quot;ms_stepperType&quot;&amp;gt;dots&amp;lt;/item&amp;gt;
    &amp;lt;item name=&quot;ms_activeStepColor&quot;&amp;gt;#FFFFFF&amp;lt;/item&amp;gt;
    &amp;lt;item name=&quot;ms_inactiveStepColor&quot;&amp;gt;#006867&amp;lt;/item&amp;gt;
    &amp;lt;item name=&quot;ms_bottomNavigationBackground&quot;&amp;gt;?attr/colorAccent&amp;lt;/item&amp;gt;
&amp;lt;/style&amp;gt; ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;showing-a-back-button-on-first-step&quot;&gt;Showing a Back button on first step&lt;/h3&gt;
&lt;p&gt;By default if the user is on the first step then the Back button in the bottom navigation is hidden. 
This behaviour can be changed by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;ms_showBackButtonOnFirstStep&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;, e.g.
&lt;code class=&quot;highlighter-rouge&quot;&gt;xml
    &amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
    &amp;lt;com.stepstone.stepper.StepperLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
        xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
        android:id=&quot;@+id/stepperLayout&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:ms_showBackButtonOnFirstStep=&quot;true&quot;
        app:ms_stepperType=&quot;dots&quot; /&amp;gt;
&lt;/code&gt;
To get a callback when this button was pressed you need set a &lt;code class=&quot;highlighter-rouge&quot;&gt;StepperListener&lt;/code&gt; and write your own custom return logic in the &lt;code class=&quot;highlighter-rouge&quot;&gt;onReturn()&lt;/code&gt; method to e.g. close the Activity.&lt;/p&gt;

&lt;h3 id=&quot;using-with-views-instead-of-fragments&quot;&gt;Using with Views instead of Fragments&lt;/h3&gt;
&lt;p&gt;It is possible to use this library without the need to rely on Fragments.
To do so you need to use &lt;code class=&quot;highlighter-rouge&quot;&gt;AbstractStepAdapter&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;AbstractFragmentStepAdapter&lt;/code&gt;.
For an example of how to use it with views please see the sample app.&lt;/p&gt;

&lt;h3 id=&quot;showing-an-error-on-tabs-if-step-verification-failed&quot;&gt;Showing an error on tabs if step verification failed&lt;/h3&gt;
&lt;p&gt;To show an error in the tabbed stepper if step verification fails you need to set &lt;code class=&quot;highlighter-rouge&quot;&gt;ms_showErrorStateEnabled&lt;/code&gt; attribute to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./gifs/error-on-tabs.gif&quot; width=&quot;360&quot; height=&quot;640&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you want to keep the error displayed when going back to the previous step you need to also set &lt;code class=&quot;highlighter-rouge&quot;&gt;ms_showErrorStateOnBackEnabled&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;custom-styling&quot;&gt;Custom styling&lt;/h3&gt;
&lt;p&gt;Basic styling can be done by choosing the active and inactive step colors. 
There are some additional properties which can be changed directly from StepperLayout’s attributes e.g. the background of bottom navigation buttons (see &lt;a href=&quot;#stepperlayout-attributes&quot;&gt;StepperLayout attributes&lt;/a&gt;)
For advanced styling you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;ms_stepperLayoutTheme&lt;/code&gt; StepperLayout’s attribute and provide your custom style to be used.
See ‘Custom StepperLayout theme’ in the sample app for an example.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./gifs/custom-theme.gif&quot; width=&quot;360&quot; height=&quot;640&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;advanced-usage&quot;&gt;Advanced usage&lt;/h3&gt;
&lt;p&gt;For other examples, e.g. persisting state on rotation, displaying errors, changing whether the user can go to the next step, etc. check out the sample app.&lt;/p&gt;

&lt;h2 id=&quot;stepperlayout-attributes&quot;&gt;StepperLayout attributes&lt;/h2&gt;
&lt;p&gt;| Attribute name                  | Format                                    | Description |
| ——————————–|——————————————-|————-|
| &lt;em&gt;ms_stepperType&lt;/em&gt;                | one of &lt;code class=&quot;highlighter-rouge&quot;&gt;dots&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;progress_bar&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;tabs&lt;/code&gt;   | &lt;strong&gt;REQUIRED:&lt;/strong&gt; Type of the stepper |
| &lt;em&gt;ms_backButtonColor&lt;/em&gt;            | color or reference                        | BACK button’s text color           |
| &lt;em&gt;ms_nextButtonColor&lt;/em&gt;            | color or reference                        | NEXT button’s text color            |
| &lt;em&gt;ms_completeButtonColor&lt;/em&gt;        | color or reference                        | COMPLETE button’s text color            |
| &lt;em&gt;ms_activeStepColor&lt;/em&gt;            | color or reference                        | Active step’s color            |
| &lt;em&gt;ms_inactiveStepColor&lt;/em&gt;          | color or reference                        | Inactive step’s color            |
| &lt;em&gt;ms_bottomNavigationBackground&lt;/em&gt; | reference                                 | Background of the bottom navigation            |
| &lt;em&gt;ms_backButtonBackground&lt;/em&gt;       | reference                                 | BACK button’s background            |
| &lt;em&gt;ms_nextButtonBackground&lt;/em&gt;       | reference                                 | NEXT button’s background            |
| &lt;em&gt;ms_completeButtonBackground&lt;/em&gt;   | reference                                 | COMPLETE button’s background            |
| &lt;em&gt;ms_backButtonText&lt;/em&gt;             | string or reference                       | BACK button’s text            |
| &lt;em&gt;ms_nextButtonText&lt;/em&gt;             | string or reference                       | NEXT button’s text            |
| &lt;em&gt;ms_completeButtonText&lt;/em&gt;         | string or reference                       | COMPLETE button’s text            |
| &lt;em&gt;ms_tabStepDividerWidth&lt;/em&gt;        | dimension or reference                    | The width of the horizontal tab divider used in tabs stepper type            |
| &lt;em&gt;ms_showBackButtonOnFirstStep&lt;/em&gt;  | boolean                                   | Flag indicating if the Back (Previous step) button should be shown on the first step. False by default.            |
| &lt;em&gt;ms_errorColor&lt;/em&gt;                 | color or reference                        | Error color in Tabs stepper |
| &lt;em&gt;ms_showErrorStateEnabled&lt;/em&gt;      | boolean                                   | Flag indicating whether to show the error state. Only applicable for ‘tabs’ type. False by default. |
| &lt;em&gt;ms_showErrorStateOnBackEnabled&lt;/em&gt;| boolean                                   | Flag indicating whether to keep showing the error state when user moves back. Only applicable for ‘tabs’ type. False by default. |
| &lt;em&gt;ms_tabNavigationEnabled&lt;/em&gt;       | boolean                                   | Flag indicating whether step navigation is possible by clicking on the tabs directly. Only applicable for ‘tabs’ type. True by default. |
| &lt;em&gt;ms_stepperLayoutTheme&lt;/em&gt;         | reference                                 | Theme to use for even more custom styling of the stepper layout. It is recommended that it should extend @style/MSDefaultStepperLayoutTheme, which is the default theme used. |&lt;/p&gt;

&lt;h3 id=&quot;stepperlayout-style-attributes&quot;&gt;StepperLayout style attributes&lt;/h3&gt;
&lt;p&gt;A list of &lt;code class=&quot;highlighter-rouge&quot;&gt;ms_stepperLayoutTheme&lt;/code&gt; attributes responsible for styling of StepperLayout’s child views.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Attribute name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_bottomNavigationStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_bottomNavigation in layout/ms_stepper_layout&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_tabsContainerStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_stepTabsContainer in layout/ms_stepper_layout&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_backNavigationButtonStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_stepPrevButton in layout/ms_stepper_layout&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_nextNavigationButtonStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_stepNextButton in layout/ms_stepper_layout&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_completeNavigationButtonStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_stepCompleteButton in layout/ms_stepper_layout&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_colorableProgressBarStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_stepProgressBar in layout/ms_stepper_layout&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_stepTabsScrollViewStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_stepTabsScrollView in layout/ms_tabs_container&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_stepTabsInnerContainerStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_stepTabsInnerContainer in layout/ms_tabs_container&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_stepTabContainerStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used in layout/ms_step_tab_container&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_stepTabNumberStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_stepNumber in layout/ms_step_tab&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_stepTabDoneIndicatorStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_stepDoneIndicator in layout/ms_step_tab&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_stepTabIconBackgroundStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_stepIconBackground in layout/ms_step_tab&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_stepTabTitleStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_stepTitle in layout/ms_step_tab&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;ms_stepTabDividerStyle&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;Used by ms_stepDivider in layout/ms_step_tab&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;missing-features&quot;&gt;Missing features&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;support for non-linear steppers&lt;/li&gt;
  &lt;li&gt;support for non-editable steppers&lt;/li&gt;
  &lt;li&gt;support for Alternative labels in the horizontal stepper&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2016 StepStone Services&lt;/p&gt;

&lt;p&gt;Licensed under the Apache License, Version 2.0 (the “License”);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an “AS IS” BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;

&lt;h2 id=&quot;maintained-by&quot;&gt;Maintained by&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.stepstone.com&quot;&gt;&lt;img src=&quot;./art/stepstone-logo.png&quot; alt=&quot;Stepstone&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 19 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/02/19/android-material-stepper/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/02/19/android-material-stepper/</guid>
        
        <category>material</category>
        
        
      </item>
    
      <item>
        <title>SlidingSquaresLoader</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://jitpack.io/#biodunalfet/SlidingSquaresLoader&quot;&gt;[](https://jitpack.io/v/biodunalfet/SlidingSquaresLoader.svg)&lt;/a&gt;
# SlidingSquaresLoader&lt;/p&gt;

&lt;p&gt;Sliding Square Loader - A simple progress loader inspired by &lt;a href=&quot;https://stories.uplabs.com/can-you-code-this-ui-volume-6-7bd09fa6dd92#.nyh2zhpvb&quot;&gt;Can you Code this UI? Volume 6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://media.giphy.com/media/l0ExrZuZO2ihDzAfm/giphy.gif&quot;&gt;sslv animation&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;gradle&quot;&gt;Gradle&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step 1.&lt;/strong&gt; Add the JitPack repository to your build file&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;allprojects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;maven&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;https://jitpack.io&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Step 2.&lt;/strong&gt; Add the dependency&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.github.biodunalfet:SlidingSquaresLoader:1.0&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;In XML Layout&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.hamza.slidingsquaresloaderview.SlidingSquareLoaderView&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app:sslv_start=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app:sslv_delay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;15&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app:sslv_duration=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;150&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app:sslv_gap=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2dp&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app:sslv_square_length=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;12dp&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app:sslv_color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/colorPrimary&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res-auto&quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sslv_start&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;boolean&lt;/code&gt; that determines if the loader should start sliding. Default value is &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sslv_duration&lt;/code&gt; = the amount of milliseconds it takes for a square to complete sliding. Default value is &lt;code class=&quot;highlighter-rouge&quot;&gt;350&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sslv_delay&lt;/code&gt; = the number of milliseconds to wait before sliding. Default value is &lt;code class=&quot;highlighter-rouge&quot;&gt;25&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sslv_square_length&lt;/code&gt; = the dimension of each square. Default value is &lt;code class=&quot;highlighter-rouge&quot;&gt;25dp&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sslv_gap&lt;/code&gt; = the dimension of the gap between each square. Default value is &lt;code class=&quot;highlighter-rouge&quot;&gt;5dp&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sslv_color&lt;/code&gt; = the &lt;code class=&quot;highlighter-rouge&quot;&gt;color&lt;/code&gt; of the square. Defaults to &lt;code class=&quot;highlighter-rouge&quot;&gt;#ff8f00&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;In Java&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SlidingSquareLoaderView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slidingview2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SlidingSquareLoaderView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sliding_view2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slidingview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// starts the sliding&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slidingview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// stops the sliding&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slidingview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// sets duration of sliding&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slidingview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDelay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// sets delay period before sliding&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slidingview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#2196F3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// sets the color of the squares&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;
&lt;p&gt;The contents of this repository are covered under the &lt;a href=&quot;https://github.com/biodunalfet/SlidingSquareLoader/blob/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 19 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/02/19/SlidingSquaresLoader/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/02/19/SlidingSquaresLoader/</guid>
        
        <category>sliding</category>
        
        <category>square</category>
        
        
      </item>
    
      <item>
        <title>Toasty</title>
        <description>&lt;h1 id=&quot;toasty&quot;&gt;Toasty&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://android-arsenal.com/api?level=9&quot;&gt;[API](https://img.shields.io/badge/API-9%2B-blue.svg?style=flat)&lt;/a&gt; &lt;a href=&quot;https://jitpack.io/#GrenderG/Toasty&quot;&gt;[](https://jitpack.io/v/GrenderG/Toasty.svg)&lt;/a&gt; &lt;a href=&quot;https://android-arsenal.com/details/1/5102&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Toasty-brightgreen.svg?style=flat)&lt;/a&gt; &lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=XUUEWEHJYFYV2&quot;&gt;[Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)&lt;/a&gt;&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
	&lt;img src=&quot;https://raw.githubusercontent.com/GrenderG/Toasty/master/art/web_hi_res_512.png&quot; width=&quot;128&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;The usual Toast, but with steroids. &lt;strong&gt;(Screenshots at the end of the file.)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Add this in your root &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file (&lt;strong&gt;not&lt;/strong&gt; your module &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-gradle&quot;&gt;allprojects {
	repositories {
		...
		maven { url &quot;https://jitpack.io&quot; }
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;dependency&quot;&gt;Dependency&lt;/h2&gt;

&lt;p&gt;Add this to your module’s &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file (make sure the version matches the JitPack badge above):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-gradle&quot;&gt;dependencies {
	...
	compile &#39;com.github.GrenderG:Toasty:1.1.3&#39;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;Each method always returns a &lt;code class=&quot;highlighter-rouge&quot;&gt;Toast&lt;/code&gt; object, so you can customize the Toast much more. &lt;strong&gt;DON’T FORGET THE &lt;code class=&quot;highlighter-rouge&quot;&gt;show()&lt;/code&gt; METHOD&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To display an error Toast:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Toasty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yourContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;This is an error toast.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To display a success Toast:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Toasty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yourContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Success&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To display an info Toast:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Toasty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yourContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Here is some info for you.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To display a warning Toast:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Toasty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;warning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yourContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Beware of the dog.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To display the usual Toast:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Toasty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yourContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Normal toast w/o icon&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To display the usual Toast with icon:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Toasty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yourContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Normal toast w/ icon&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yourIconDrawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can also create your custom Toasts with the &lt;code class=&quot;highlighter-rouge&quot;&gt;custom()&lt;/code&gt; method:
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
Toasty.custom(yourContext, &quot;I&#39;m a custom Toast&quot;, yourIconDrawable, textColor, tintColor, duration, withIcon, true).show();
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There are variants of each method, feel free to explore this library.&lt;/p&gt;

&lt;h2 id=&quot;apps-using-toasty&quot;&gt;Apps using Toasty&lt;/h2&gt;

&lt;p&gt;Want to be here? Open an &lt;code class=&quot;highlighter-rouge&quot;&gt;issue&lt;/code&gt; or make a &lt;code class=&quot;highlighter-rouge&quot;&gt;pull request&lt;/code&gt;.&lt;/p&gt;

&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/vmch41lYF_TKb1MKgtYrSgz2rKQ4T1EnGRCGpWSMqLRSzi_pgNWoZpw9WJE8UV4t614=w300-rw&quot; width=&quot;64&quot; /&gt;&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.trivisionzero.chromophoto&quot;&gt;ChromoPhoto - Colorize B&amp;amp;W&lt;/a&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/2EYJPs-qBlKJ3L6cy7idQpzKfZkTzA2G4UQfbs-96VGMftQ-7aV4Dvj77ejzZlAAVx_C=w300-rw&quot; width=&quot;64&quot; /&gt;&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.serg.chuprin.tageditor&quot;&gt;AutoTagger - редактор тегов.&lt;/a&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GrenderG/Toasty/master/art/scr1.png&quot; width=&quot;250&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/GrenderG/Toasty/master/art/scr2.png&quot; width=&quot;250&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/GrenderG/Toasty/master/art/scr3.png&quot; width=&quot;250&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/GrenderG/Toasty/master/art/scr4.png&quot; width=&quot;250&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/GrenderG/Toasty/master/art/scr5.png&quot; width=&quot;250&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/GrenderG/Toasty/master/art/scr6.png&quot; width=&quot;250&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 18 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/02/18/Toasty/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/02/18/Toasty/</guid>
        
        <category>toast</category>
        
        
      </item>
    
      <item>
        <title>SwitchIcon</title>
        <description>&lt;h1 id=&quot;android-switchicon&quot;&gt;Android-SwitchIcon&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://jitpack.io/#zagum/Android-SwitchIcon&quot;&gt;[](https://jitpack.io/v/zagum/Android-SwitchIcon.svg)&lt;/a&gt;
&lt;a href=&quot;https://android-arsenal.com/api?level=15&quot;&gt;[API](https://img.shields.io/badge/API-15%2B-brightgreen.svg?style=flat)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Google launcher-style implementation of switch (enable/disable) icon&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zagum/Android-SwitchIcon/blob/master/art/sample.gif&quot;&gt;image&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;compatibility&quot;&gt;Compatibility&lt;/h2&gt;

&lt;p&gt;This library is compatible from API 15 (Android 4.0.3).&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;

&lt;p&gt;Add it in your root build.gradle at the end of repositories:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;allprojects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;maven&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://jitpack.io&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add the dependency&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;com.github.zagum:Android-SwitchIcon:1.3.2&#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;SwitchIconView extends from AppCompatImageView so you can set icon with  &lt;code class=&quot;highlighter-rouge&quot;&gt;app:srcCompat&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Set any icon (vector or image) to SwitchIconView and enjoy switchable icon in your app :)&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;app:si_tint_color&lt;/code&gt; to set color to icon. Default color is black;&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;app:si_disabled_color&lt;/code&gt; to set color when icon disabled. Default color is equals with &lt;code class=&quot;highlighter-rouge&quot;&gt;app:si_tint_color&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;app:si_disabled_alpha&lt;/code&gt; to set alpha when icon disabled. Default alpha is &lt;code class=&quot;highlighter-rouge&quot;&gt;.5&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;app:si_no_dash&lt;/code&gt; if you don’t want to draw dash, when icon disabled;&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;app:si_animation_duration&lt;/code&gt; if you want to change switching state animation duration;&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;app:si_enabled&lt;/code&gt; to set initial icon state;&lt;/p&gt;

&lt;p&gt;Fully customized implementation:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;com.github.zagum.switchicon.SwitchIconView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:padding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:si_animation_duration=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;500&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:si_disabled_alpha=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.3&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:si_disabled_color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#b7b7b7&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:si_tint_color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#ff3c00&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:si_enabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:si_no_dash=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:srcCompat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/ic_cloud&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Public methods:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setIconEnabled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setIconEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isIconEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;switchState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;switchState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;See &lt;a href=&quot;https://github.com/zagum/Android-SwitchIcon/tree/master/switchicon-sample&quot;&gt;sample&lt;/a&gt; project for more information.&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2017 Evgenii Zagumennyi

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 16 Jan 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/01/16/SwitchIcon/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/01/16/SwitchIcon/</guid>
        
        <category>switch</category>
        
        <category>icon</category>
        
        
      </item>
    
      <item>
        <title>GithubWidget</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/title_image_3.png?raw=true&quot;&gt;GithubWidget&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;github-widget&quot;&gt;Github Widget&lt;/h1&gt;
&lt;p&gt;Contributions, stars, followers, trending etc. on Github.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Nightonke/WoWoViewPager&quot;&gt;[WoWoViewPager](https://github.com/Nightonke/WoWoViewPager/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)&lt;/a&gt;
&lt;a href=&quot;https://github.com/Nightonke/BoomMenu&quot;&gt;[BoomMenu](https://github.com/Nightonke/BoomMenu/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)&lt;/a&gt;
&lt;a href=&quot;https://github.com/Nightonke/CoCoin&quot;&gt;[CoCoin](https://github.com/Nightonke/CoCoin/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)&lt;/a&gt;
&lt;a href=&quot;https://github.com/Nightonke/BlurLockView&quot;&gt;[BlurLockView](https://github.com/Nightonke/BlurLockView/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)&lt;/a&gt;
&lt;a href=&quot;https://github.com/Nightonke/LeeCo&quot;&gt;[LeeCo](https://github.com/Nightonke/LeeCo/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)&lt;/a&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget&quot;&gt;[GithubWidget](https://github.com/Nightonke/GithubWidget/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)&lt;/a&gt;
&lt;a href=&quot;https://github.com/Nightonke/JellyToggleButton&quot;&gt;[JellyToggleButton](https://github.com/Nightonke/JellyToggleButton/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)&lt;/a&gt;
&lt;a href=&quot;https://github.com/Nightonke/FaceOffToggleButton&quot;&gt;[FaceOffToggleButton](https://github.com/Nightonke/FaceOffToggleButton/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;guide&quot;&gt;Guide&lt;/h1&gt;
&lt;p&gt;#### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/README-ZH.md&quot;&gt;中文文档&lt;/a&gt;
#### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#what-is-github-widget-1&quot;&gt;What is Github Widget?&lt;/a&gt;
#### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#download&quot;&gt;Download&lt;/a&gt;
#### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#styles-of-github-widget-1&quot;&gt;Styles of Github Widget&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;httpsgithubcomnightonkegithubwidget41-1&quot;&gt;&lt;a href=&quot;https://github.com/Nightonke/GithubWidget#41-1&quot;&gt;4×1&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;##### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#42-1-1&quot;&gt;4×2-1&lt;/a&gt;
##### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#42-2-1&quot;&gt;4×2-2&lt;/a&gt;
##### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#43-1-1&quot;&gt;4×3-1&lt;/a&gt;
##### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#4345-2-1&quot;&gt;4×345-2&lt;/a&gt;
##### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#4345-3-1&quot;&gt;4×345-3&lt;/a&gt;
##### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#44-1-1&quot;&gt;4×4-1&lt;/a&gt;
##### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#44-2-1&quot;&gt;4×4-2&lt;/a&gt;
##### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#445-3-1&quot;&gt;4×45-3&lt;/a&gt;
##### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#45-1-1&quot;&gt;4×5-1&lt;/a&gt;
##### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#45-2-1&quot;&gt;4×5-2&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;settingshttpsgithubcomnightonkegithubwidgetsettings-1&quot;&gt;&lt;a href=&quot;https://github.com/Nightonke/GithubWidget#settings-1&quot;&gt;Settings&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;#### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#problems-bugs-or-enhancement&quot;&gt;Problems, Bugs or Enhancement&lt;/a&gt;
#### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#version-list-1&quot;&gt;Version List&lt;/a&gt;
#### &lt;a href=&quot;https://github.com/Nightonke/GithubWidget#license-1&quot;&gt;License&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;what-is-github-widget&quot;&gt;What is Github Widget?&lt;/h3&gt;
&lt;p&gt;Github Widget is a ligthweight application for 11 different styles of widget to show the following information of github user.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Contributions chart(2D/3D)&lt;/li&gt;
  &lt;li&gt;Total contribution of this year&lt;/li&gt;
  &lt;li&gt;Avatar&lt;/li&gt;
  &lt;li&gt;Motto&lt;/li&gt;
  &lt;li&gt;Followers&lt;/li&gt;
  &lt;li&gt;Contributions of today&lt;/li&gt;
  &lt;li&gt;Current streak&lt;/li&gt;
  &lt;li&gt;Addition of stars&lt;/li&gt;
  &lt;li&gt;Contributions of busiest day&lt;/li&gt;
  &lt;li&gt;Longest streak&lt;/li&gt;
  &lt;li&gt;Trending(daily/weekly/monthly)&lt;/li&gt;
  &lt;li&gt;Received events&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After installing Github Widget, there is no launch icon for it. Try to add widgets to launcher and you will find Github Widget there.&lt;/p&gt;

&lt;h3 id=&quot;download&quot;&gt;Download&lt;/h3&gt;
&lt;p&gt;Check the &lt;a href=&quot;https://github.com/Nightonke/GithubWidget/tree/master/Apk&quot;&gt;Apk&lt;/a&gt; diectory for all versions apks and qrcode pictures.&lt;br /&gt;
Download the current version &lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Apk/GithubWidget_1.0.3.apk?raw=true&quot;&gt;here&lt;/a&gt;.&lt;br /&gt;
Or from &lt;a href=&quot;http://fir.im/GithubWidget&quot;&gt;fir.im/GithubWidget&lt;/a&gt;.&lt;br /&gt;
Or by qrcode:&lt;br /&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Apk/GithubWidget_1.0.3.png?raw=true&quot;&gt;Qrcode&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;styles-of-github-widget&quot;&gt;Styles of Github Widget&lt;/h3&gt;
&lt;p&gt;The first version supports 11 styles for showing part of the above information.&lt;br /&gt;
Notice that from version 1.0.3, all the widgets support width larger or equal than 4-blocks. But I suggest 4-blocks-width widgets should be used because sometimes images look strange when the widgets are too wide.&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;4×1&lt;/h4&gt;
&lt;p&gt;✓ 2D Contributions chart&lt;br /&gt;
✓ Total contributions of this year&lt;br /&gt;
✓ Avatar&lt;br /&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/style_0.png?raw=true&quot;&gt;4×1&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;4×2-1&lt;/h4&gt;
&lt;p&gt;✓ 2D Contributions chart&lt;br /&gt;
✓ Total contributions of this year&lt;br /&gt;
✓ Avatar&lt;br /&gt;
✓ Motto&lt;br /&gt;
✓ Followers&lt;br /&gt;
✓ Contributions of today&lt;br /&gt;
✓ Current streak&lt;br /&gt;
✓ Addition of stars&lt;br /&gt;
From top to bottom: contribution, avatar and motto, numbers&lt;br /&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/style_1.png?raw=true&quot;&gt;4×2-1&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;4×2-2&lt;/h4&gt;
&lt;p&gt;✓ 2D Contributions chart&lt;br /&gt;
✓ Total contributions of this year&lt;br /&gt;
✓ Avatar&lt;br /&gt;
✓ Motto&lt;br /&gt;
✓ Followers&lt;br /&gt;
✓ Contributions of today&lt;br /&gt;
✓ Current streak&lt;br /&gt;
✓ Addition of stars&lt;br /&gt;
From top to bottom: avatar and motto, numbers,  contribution&lt;br /&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/style_2.png?raw=true&quot;&gt;4×2-2&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;4×3-1&lt;/h4&gt;
&lt;p&gt;✓ 3D Contributions chart&lt;br /&gt;
✓ Total contributions of this year&lt;br /&gt;
✓ Avatar&lt;br /&gt;
✓ Contributions on busiest day&lt;br /&gt;
✓ Current streak&lt;br /&gt;
✓ Longest streak&lt;br /&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/style_3.png?raw=true&quot;&gt;4×3-1&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;4×345-2&lt;/h4&gt;
&lt;p&gt;✓ 2D Contributions chart&lt;br /&gt;
✓ Total contributions of this year&lt;br /&gt;
✓ Avatar&lt;br /&gt;
✓ Motto&lt;br /&gt;
✓ Followers&lt;br /&gt;
✓ Contributions of today&lt;br /&gt;
✓ Current streak&lt;br /&gt;
✓ Addition of stars&lt;br /&gt;
✓ Trending(daily, weekly or monthly)&lt;br /&gt;
✓ Received events&lt;br /&gt;
(From top to bottom: contribution, avatar and motto, numbers, trending or events)&lt;br /&gt;
Notice that this style is able to resize to 4×3, 4×4 or 4×5.&lt;br /&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/style_4.png?raw=true&quot;&gt;4×345-2&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-5&quot;&gt;4×345-3&lt;/h4&gt;
&lt;p&gt;✓ 2D Contributions chart&lt;br /&gt;
✓ Total contributions of this year&lt;br /&gt;
✓ Avatar&lt;br /&gt;
✓ Motto&lt;br /&gt;
✓ Followers&lt;br /&gt;
✓ Contributions of today&lt;br /&gt;
✓ Current streak&lt;br /&gt;
✓ Addition of stars&lt;br /&gt;
✓ Trending(daily, weekly or monthly)&lt;br /&gt;
✓ Received events&lt;br /&gt;
(From top to bottom: avatar and motto, numbers, contribution, trending or events)&lt;br /&gt;
Notice that this style is able to resize to 4×3, 4×4 or 4×5.&lt;br /&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/style_5.png?raw=true&quot;&gt;4×345-3&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-6&quot;&gt;4×4-1&lt;/h4&gt;
&lt;p&gt;✓ 3D Contributions chart&lt;br /&gt;
✓ Total contributions of this year&lt;br /&gt;
✓ Avatar&lt;br /&gt;
✓ Motto&lt;br /&gt;
✓ Followers&lt;br /&gt;
✓ Contributions of today&lt;br /&gt;
✓ Current streak&lt;br /&gt;
✓ Addition of stars&lt;br /&gt;
✓ Contributions on busiest day&lt;br /&gt;
✓ Longest streak
(From top to bottom: contribution, avatar and motto, numbers)&lt;br /&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/style_6.png?raw=true&quot;&gt;4×4-1&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-7&quot;&gt;4×4-2&lt;/h4&gt;
&lt;p&gt;✓ 3D Contributions chart&lt;br /&gt;
✓ Total contributions of this year&lt;br /&gt;
✓ Avatar&lt;br /&gt;
✓ Motto&lt;br /&gt;
✓ Followers&lt;br /&gt;
✓ Contributions of today&lt;br /&gt;
✓ Current streak&lt;br /&gt;
✓ Addition of stars&lt;br /&gt;
✓ Contributions on busiest day&lt;br /&gt;
✓ Longest streak
(From top to bottom: avatar and motto, numbers, contribution)&lt;br /&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/style_7.png?raw=true&quot;&gt;4×4-2&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-8&quot;&gt;4×45-3&lt;/h4&gt;
&lt;p&gt;✓ 3D Contributions chart&lt;br /&gt;
✓ Total contributions of this year&lt;br /&gt;
✓ Avatar&lt;br /&gt;
✓ Contributions on busiest day&lt;br /&gt;
✓ Current streak&lt;br /&gt;
✓ Longest streak&lt;br /&gt;
✓ Trending(daily, weekly and monthly) &lt;br /&gt;
✓ Received events&lt;br /&gt;
Notice that this style is able to resize to 4×4 or 4×5.&lt;br /&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/style_8.png?raw=true&quot;&gt;4×45-3&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-9&quot;&gt;4×5-1&lt;/h4&gt;
&lt;p&gt;✓ 3D Contributions chart&lt;br /&gt;
✓ Total contributions of this year&lt;br /&gt;
✓ Avatar&lt;br /&gt;
✓ Motto &lt;br /&gt;
✓ Followers &lt;br /&gt;
✓ Contributions of today &lt;br /&gt;
✓ Current streak &lt;br /&gt;
✓ Addition of stars &lt;br /&gt;
✓ Contributions on busiest day &lt;br /&gt;
✓ Longest streak &lt;br /&gt;
✓ Trending(daily, weekly or monthly)&lt;br /&gt;
✓ Received events&lt;br /&gt;
(From top to bottom: contribution, avatar and motto, numbers, trending or events)&lt;br /&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/style_9.png?raw=true&quot;&gt;4×5-1&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-10&quot;&gt;4×5-2&lt;/h4&gt;
&lt;p&gt;✓ 3D Contributions chart&lt;br /&gt;
✓ Total contributions of this year&lt;br /&gt;
✓ Avatar&lt;br /&gt;
✓ Motto &lt;br /&gt;
✓ Followers &lt;br /&gt;
✓ Contributions of today &lt;br /&gt;
✓ Current streak &lt;br /&gt;
✓ Addition of stars &lt;br /&gt;
✓ Contributions on busiest day &lt;br /&gt;
✓ Longest streak &lt;br /&gt;
✓ Trending(daily, weekly or monthly)&lt;br /&gt;
✓ Received events&lt;br /&gt;
(From top to bottom: avatar and motto, numbers, trending or events, contribution)&lt;br /&gt;
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/style_10.png?raw=true&quot;&gt;4×5-2&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;settings&quot;&gt;Settings&lt;/h3&gt;
&lt;p&gt;After inputting your user name in Github, you can click your avatar to refresh current data in Github Widget. Clicking anywhere else leads you to the settings page to do some DIY things for Github Widget. You can:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Change the user name in Github to get another user’s data to show in Github Widget&lt;/li&gt;
  &lt;li&gt;Change your motto&lt;/li&gt;
  &lt;li&gt;Change the color of the blocks in the 2D chart and the columns in 3D chart&lt;/li&gt;
  &lt;li&gt;Reset the above color to default color&lt;/li&gt;
  &lt;li&gt;Sign in, then we can get the data of contributions for your private repositories&lt;/li&gt;
  &lt;li&gt;Whether show toast when operations or errors happen&lt;/li&gt;
  &lt;li&gt;Whether draw month dash in 3D chart&lt;/li&gt;
  &lt;li&gt;Whether draw week dash in 3D chart&lt;/li&gt;
  &lt;li&gt;Start from Sunday or Monday&lt;/li&gt;
  &lt;li&gt;Frequency for updating the data&lt;/li&gt;
  &lt;li&gt;Events to be gotten from internet. The larger, the couting for stars are more accurate but more network flow is needed&lt;/li&gt;
  &lt;li&gt;Contents in the list view in Github Widget. It can be one of the values: daily, weekly or monthly trending for the language you choose below or the events you got&lt;/li&gt;
  &lt;li&gt;The language for the trending content&lt;/li&gt;
  &lt;li&gt;About and the url for this page and url for the developer&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Pic/color.png?raw=true&quot;&gt;Color&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;problems-bugs-or-enhancements&quot;&gt;Problems, Bugs or Enhancements&lt;/h3&gt;
&lt;p&gt;Maybe you get problems or bugs? Just tell me in issues or email. And you can tell me your enhancements in issues or pull-requests.&lt;/p&gt;

&lt;h3 id=&quot;version-list&quot;&gt;Version List&lt;/h3&gt;
&lt;p&gt;##### First Version
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Apk/GithubWidget_1.0.1.apk?raw=true&quot;&gt; V1.0.1&lt;/a&gt;
##### 1.0.2
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Apk/GithubWidget_1.0.2.apk?raw=true&quot;&gt; V1.0.2&lt;/a&gt;&lt;br /&gt;
Add all language support.&lt;br /&gt;
##### 1.0.3
&lt;a href=&quot;https://github.com/Nightonke/GithubWidget/blob/master/Apk/GithubWidget_1.0.3.apk?raw=true&quot;&gt; V1.0.3&lt;/a&gt;&lt;br /&gt;
Delete url and img tags, support larger width.&lt;/p&gt;

&lt;h3 id=&quot;license&quot;&gt;License&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 Nightonke

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sun, 15 Jan 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/01/15/GithubWidget/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/01/15/GithubWidget/</guid>
        
        <category>widget</category>
        
        <category>github</category>
        
        
      </item>
    
      <item>
        <title>EasyFlipView</title>
        <description>&lt;h1 id=&quot;easyflipview&quot;&gt;EasyFlipView&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/wajahatkarim3/EasyFlipView&quot;&gt;[Build Status](https://travis-ci.org/wajahatkarim3/EasyFlipView.svg?branch=master)&lt;/a&gt; &lt;a href=&quot;https://bintray.com/wajahatkarim3/EasyFlipView/com.wajahatkarim3.EasyFlipView/_latestVersion&quot;&gt; [Download](https://api.bintray.com/packages/wajahatkarim3/EasyFlipView/com.wajahatkarim3.EasyFlipView/images/download.svg) &lt;/a&gt; &lt;a href=&quot;https://android-arsenal.com/details/1/5051&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-EasyFlipView-brightgreen.svg?style=flat)&lt;/a&gt; &lt;a href=&quot;https://android-arsenal.com/api?level=15&quot;&gt;[API](https://img.shields.io/badge/API-15%2B-blue.svg?style=flat)&lt;/a&gt; &lt;a href=&quot;https://material.uplabs.com/posts/easyflipview&quot;&gt;[](https://img.shields.io/badge/MaterialUp-EasyFlipView-yellowgreen.png)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A quick and easy flip view through which you can create views with two sides like credit cards, poker cards etc.&lt;/p&gt;

&lt;p&gt;[](https://github.com/wajahatkarim3/EasyFlipView/blob/master/Art/demo.gif)&lt;/p&gt;

&lt;h1 id=&quot;demo&quot;&gt;Demo&lt;/h1&gt;
&lt;p&gt;Install &lt;a href=&quot;https://github.com/wajahatkarim3/EasyFlipView/releases/download/1.0.0/EasyFlipView-Demo_v1.0.0.apk&quot;&gt;Demo&lt;/a&gt; app or APK from &lt;a href=&quot;https://github.com/wajahatkarim3/EasyFlipView/releases&quot;&gt;Releases&lt;/a&gt; on your device and click on any card to flip it&lt;/p&gt;

&lt;h1 id=&quot;changelog&quot;&gt;Changelog&lt;/h1&gt;
&lt;p&gt;Changes exist in the &lt;a href=&quot;https://github.com/wajahatkarim3/EasyFlipView/releases&quot;&gt;releases&lt;/a&gt; tab.&lt;/p&gt;

&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;
&lt;p&gt;Add this in your app’s build.gradle file:
&lt;code class=&quot;highlighter-rouge&quot;&gt;groovy
dependencies {
  compile &#39;com.wajahatkarim3.EasyFlipView:EasyFlipView:1.0.2&#39;
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Or add EasyFlipView as a new dependency inside your pom.xml&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.wajahatkarim3.EasyFlipView&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;EasyFlipView&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0.2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;pom&lt;span class=&quot;nt&quot;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Usage
=====&lt;/p&gt;

&lt;h2 id=&quot;xml&quot;&gt;XML&lt;/h2&gt;
&lt;p&gt;EasyFlipView In XML layouts
```xml&lt;/p&gt;
&lt;com.wajahatkarim3.easyflipview.easyflipview android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; app:flipontouch=&quot;true&quot; app:flipenabled=&quot;true&quot; app:flipduration=&quot;400&quot;&gt;

	&amp;lt;-- Back Layout Goes Here --&amp;gt;
	&lt;include layout=&quot;@layout/flash_card_layout_back&quot; /&gt;
        
	&amp;lt;-- Front Layout Goes Here --&amp;gt;
	&lt;include layout=&quot;@layout/flash_card_layout_front&quot; /&gt;

&lt;/com.wajahatkarim3.easyflipview.easyflipview&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;All customizable attributes for EasyFlipView
```xml
&amp;lt;declare-styleable name=&quot;easy_flip_view&quot;&amp;gt;
	&amp;lt;-- Whether card should be flipped on touch or not (Default is true) --&amp;gt;
	&amp;lt;attr name=&quot;flipOnTouch&quot; format=&quot;boolean&quot;/&amp;gt;
	&amp;lt;-- The duration of flip animation in milliseconds (Default is 400 ms) --&amp;gt;
	&amp;lt;attr name=&quot;flipDuration&quot; format=&quot;integer&quot;/&amp;gt;
	&amp;lt;-- If this is set to false, then it won&#39;t flip ever (Default is true) --&amp;gt;
	&amp;lt;attr name=&quot;flipEnabled&quot; format=&quot;boolean&quot;/&amp;gt;
&amp;lt;/declare-styleable&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;in-code-java&quot;&gt;In Code (Java)&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Flips the view with or without animation&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mYourFlipView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flipTheView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mYourFlipView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flipTheView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Sets and Gets the Flip Animation Duration in milliseconds (Default is 400 ms)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mYourFlipView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFlipDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dur&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mYourFlipView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFlipDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Sets and gets the flip enable status (Default is true)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mYourFlipView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFlipEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flipStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mYourFlipView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isFlipEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Sets and gets the flip on touch status (Default is true)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mYourFlipView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFlipOntouch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flipTouchStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mYourFlipView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isFlipOnTouch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Get current flip state in enum (FlipState.FRONT_SIDE or FlipState.BACK_SIDE)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;EasyFlipView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FlipState&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flipSide&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mYourFlipView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCurrentFlipState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Get whether front/back side of flip is visible or not.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frontVal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mYourFlipView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isFrontSide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;backVal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mYourFlipView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isBackSide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;developed-by&quot;&gt;Developed By&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Wajahat Karim
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Website (http://wajahatkarim.com)&lt;/li&gt;
  &lt;li&gt;Twitter (http://twitter.com/wajahatkarim)&lt;/li&gt;
  &lt;li&gt;Medium (http://www.medium.com/@wajahatkarim3)&lt;/li&gt;
  &lt;li&gt;LinkedIn (http://www.linkedin.com/in/wajahatkarim)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;how-to-contribute&quot;&gt;How to Contribute&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Fork it&lt;/li&gt;
  &lt;li&gt;Create your feature branch (git checkout -b my-new-feature)&lt;/li&gt;
  &lt;li&gt;Commit your changes (git commit -am ‘Add some feature’)&lt;/li&gt;
  &lt;li&gt;Push to the branch (git push origin my-new-feature)&lt;/li&gt;
  &lt;li&gt;Create new Pull Request&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;license&quot;&gt;License&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 Wajahat Karim

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 09 Jan 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/01/09/EasyFlipView/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/01/09/EasyFlipView/</guid>
        
        <category>flip</category>
        
        
      </item>
    
      <item>
        <title>Text Decorator</title>
        <description>&lt;h1 id=&quot;text-decorator&quot;&gt;Text Decorator&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/nntuyen/text-decorator&quot;&gt;[Build Status](https://travis-ci.org/nntuyen/text-decorator.svg?branch=master)&lt;/a&gt;
&lt;a href=&quot;http://android-arsenal.com/details/1/4982&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Text%20Decorator-brightgreen.svg?style=flat)&lt;/a&gt;
&lt;a href=&quot;http://www.android-gems.com/lib/nntuyen/text-decorator&quot;&gt;[Android Gems](http://www.android-gems.com/badge/nntuyen/text-decorator.svg?branch=master)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Decorate your TextView easily&lt;/p&gt;

&lt;p&gt;[](screenshot/screenshot2.gif)&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;TextDecorator&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;decorate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTextColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;colorAccent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBackgroundColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;colorPrimary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;strikethrough&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTextStyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Typeface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BOLD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Typeface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ITALIC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTypeface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;serif&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSuperscript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;78&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSubscript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;87&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;92&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;underline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;blur&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BlurMaskFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Blur&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NORMAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeTextClickable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnTextClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MainActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;270&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;TextDecorator&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;decorate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTextColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;colorAccent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Lorem&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;amet&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBackgroundColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;colorPrimary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dolor&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;elit&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;strikethrough&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Duis&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Praesent&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;underline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sodales&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;quam&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSubscript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;vitae&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeTextClickable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnTextClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MainActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;porta&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;commodo&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;tempor venenatis nulla&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTextColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;holo_green_light&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;porta&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;commodo&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;tempor venenatis nulla&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;
&lt;p&gt;Gradle&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;com.tuyenmonkey:text-decorator:1.0.0&#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 Tuyen Monkey

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 02 Jan 2017 00:00:00 +0900</pubDate>
        <link>http://kmshack.github.io/AndroidUICollection/2017/01/02/text_decorator/</link>
        <guid isPermaLink="true">http://kmshack.github.io/AndroidUICollection/2017/01/02/text_decorator/</guid>
        
        <category>text</category>
        
        <category>decorator</category>
        
        
      </item>
    
  </channel>
</rss>
